{"version":3,"sources":["icons/blank-asset.svg","actions/errors.js","config/config.js","config/index.js","config/default.js","services/chainClient.js","actions/secretparams.js","components/SwapProgressStepper/steps.js","utils/async.js","utils/expiration.js","utils/app-links.js","utils/storage.js","actions/transactions.js","actions/wallets.js","utils/wallets.js","utils/validation.js","actions/swap.js","actions/assets.js","reducers/helpers.js","reducers/assets.js","reducers/wallets.js","actions/counterparty.js","reducers/counterparty.js","reducers/transactions.js","reducers/secretparams.js","actions/assetSelector.js","reducers/assetSelector.js","reducers/swap.js","reducers/index.js","history.js","store.js","errorHandler.js","utils/assets.js","components/SwapPairPanel/SwapPairPanel.js","components/AssetSelector/AssetSelector.js","components/Button/Button.js","containers/AssetSelection/AssetSelection.js","containers/AssetSelection/index.js","components/withCopyButton.js","components/ExpirationDetails/ExpirationDetails.js","components/ExpirationDetails/index.js","components/AddressInput/AddressInput.js","containers/CounterPartyWallets/CounterPartyWallets.js","containers/CounterPartyWallets/index.js","components/CurrencyInput/CurrencyInput.js","components/Rate/Rate.js","containers/CurrencyInputs/CurrencyInputs.js","containers/CurrencyInputs/index.js","containers/InitiatorExpirationInfo/InitiatorExpirationInfo.js","containers/InitiatorExpirationInfo/index.js","components/WalletDisplay/WalletDisplay.js","containers/WalletPanel/WalletPanel.js","containers/WalletPanel/index.js","containers/SwapInitiation/SwapInitiation.js","containers/SwapInitiation/index.js","components/BrandCard/BrandCard.js","components/CounterPartyLinkCard/CounterPartyLinkCard.js","components/BackupLinkCard/BackupLinkCard.js","components/WalletChoose/WalletChoose.js","utils/networks.js","components/WalletConnect/WalletConnect.js","components/WalletConnecting/WalletConnecting.js","utils/address.js","components/WalletConnected/WalletConnected.js","components/WalletConnectPopup/WalletConnectPopup.js","components/ErrorModal/ErrorModal.js","containers/Waiting/Waiting.js","containers/Waiting/index.js","containers/WalletPopups/WalletPopups.js","containers/WalletPopups/index.js","containers/SwapRedemption/SwapRedemption.js","containers/SwapRedemption/index.js","containers/SwapCompleted/SwapCompleted.js","containers/SwapCompleted/index.js","containers/SwapRefund/SwapRefund.js","containers/SwapRefund/index.js","components/HexaDisplay/HexaDisplay.js","containers/SwapRefunded/SwapRefunded.js","containers/SwapRefunded/index.js","components/SwapProgressStepper/SwapProgressStepper.js","containers/LiqualitySwap/LiqualitySwap.js","containers/LiqualitySwap/index.js","App.js","registerServiceWorker.js","index.js","icons/copy.svg","icons/close.svg","icons/switch.svg","icons/clock.svg","icons/handshake.png","components/WalletDisplay/wallet-icon.svg","icons/ledger.svg","icons/node.svg","icons/metamask.svg","components/SwapPairPanel/assets-bg.svg","components/Button/spinner.svg","components/AddressInput/tick.svg","components/AddressInput/error.svg","icons/lock.svg","logo.png","logo-text.png","../node_modules/cryptocurrency-icons/svg/color sync /^/.//.*/.svg$","icons/completed.svg"],"names":["module","exports","__webpack_require__","p","timeout","types","SET_ERROR","clearError","type","error","actions","setError","_ref","Object","asyncToGenerator","regenerator_default","a","mark","_callee","dispatch","wrap","_context","prev","next","clearTimeout","setTimeout","stop","_x","apply","this","arguments","footerVersion","concat","process","Client","version","config","assets","eth","rpc","url","network","btc","username","password","feeNumberOfBlocks","midman","contractAddress","minConfirmations","injectScript","injectFooter","runtimeConfig","window","finalConfig","_","clone","debug","twitterButton","merge","isEmpty","buildtimeConfig","console","log","clientCreators","asset","wallet","btcConfig","btcClient","addProvider","BitcoinBitcoreRpcProvider","ledger","BitcoinLedgerProvider","BitcoinNetworks","useWebBle","localStorage","BitcoinSwapProvider","BitcoinJsLibSwapProvider","ethConfig","ethClient","EthereumRpcProvider","EthereumMetaMaskProvider","web3","currentProvider","EthereumNetworks","EthereumLedgerProvider","EthereumSwapProvider","erc20","assetConfig","erc20Client","EthereumErc20Provider","EthereumErc20SwapProvider","clients","getClient","client","SET_SECRET","SET_SECRET_HASH","setSecret","secret","setSecretHash","secretHash","steps","freeze","INITIATION","AGREEMENT","CLAIMING","SETTLED","stepData","id","label","sleep","ms","Promise","resolve","expirationDurations","moment","duration","b","getFundExpiration","expiration","party","start","time","subtract","getClaimExpiration","generateExpiration","add","APP_BASE_URL","location","protocol","host","pathname","generateLink","swap","assetA","assetB","walletA","walletB","transactionsA","transactionsB","counterPartyA","counterPartyB","counterparty","length","undefined","_swap$assets","_swap$wallets","wallets","_swap$transactions","transactions","_swap$counterParty","counterParty","_swap$assets2","_swap$wallets2","_swap$transactions2","_swap$counterParty2","urlParams","ccy1","currency","ccy1v","value","ccy1Addr","address","addresses","ccy1CounterPartyAddr","ccy2","ccy2v","ccy2Addr","ccy2CounterPartyAddr","aFundHash","fund","hash","bFundHash","aFundBlock","block","bFundBlock","secretParams","unix","isPartyB","queryString","stringify","generateSwapState","parse","replace","parseFloat","claim","link","href","storage","update","obj","store","getState","item","get","updated","set","SET_TRANSACTION","_callee3","tx","currentParty","_context3","getSwapSecret","sent","secretActions","setStep","step","confirmations","swapActions","setLocation","currentLocation","hasInitiated","hasRefunded","refund","canRefund","swapExpiration","swapExpired","isAfter","monitorTransaction","_callee4","kind","updatedTransaction","state","_context4","chain","getTransactionByHash","router","setTransaction","setLink","defineProperty","_x11","_x12","loadTransactions","_ref2","_callee2","data","swapState","_context2","forEach","path","has","parts","split","txHash","waitForSwapClaim","waitForSwapRefund","_x13","_x14","TOGGLE_WALLET_CONNECT","CHOOSE_WALLET","START_CONNECTING_WALLET","CONNECT_WALLET","DISCONNECT_WALLET","chooseWallet","startConnecting","connectWallet","balance","waitForWallet","_x2","waitForWalletInitialization","_getState$swap","currencyCode","addressesPerCall","unusedAddress","allAddresses","expectedAddress","formattedBalance","otherParty","walletParty","cryptoassets","getUnusedAddress","getUsedAddresses","toConsumableArray","Set","map","formatAddress","includes","filter","getBalance","unitToCurrency","toFixed","connecting","_x3","_x4","toggleWalletConnect","disconnectWallet","_ref3","preserveAddress","_x5","_x6","metamask","icon","name","connection","title","troubleshootConnectionLink","bitcoin_ledger","description","bitcoin_node","node","ethereum_node","ethereum_ledger","walletsByAsset","getCurrencyInputErrors","errors","assetRate","rate","getWalletErrors","initialSwapState","connected","getCounterPartyErrors","isValidAddress","getInitiationErrors","isVerified","initiation","safeConfirmTime","isInitiateValid","reduce","keys","SWITCH_SIDES","SET_STEP","SET_EXPIRATION","SET_LINK","SET_IS_VERIFIED","SET_SHOW_ERRORS","SET_LOADING_MESSAGE","setExpiration","setIsVerified","showErrors","ensureWallet","_callee10","_getState$swap4","walletSet","walletAvailable","w","_context10","isWalletAvailable","watch","abrupt","resolveOnConnection","subscribe","connectOpen","walletActions","generateSecret","_callee12","_getState$swap5","secretData","secretMsg","_context12","join","withLoadingMessage","_callee11","_context11","ensureSecret","_callee13","_getState$swap6","_context13","lockFunds","_callee14","_client$swap","_getState$swap7","valueInUnit","initiateSwapParams","_context14","getBlockHeight","currencyToUnit","initiateSwap","alert","transactionActions","_callee15","func","_context15","walletsConfig","loadingMessage","finish","_callee16","_getState$swap8","_getState$swap8$asset","_getState$swap8$walle","_context16","verifyInitiateSwapTransaction","t0","findInitiateSwapTransaction","_callee17","_getState$swap9","_getState$swap9$asset","_getState$swap9$walle","initiateTransaction","_context17","_ref5","_callee5","claimTransaction","_context5","findClaimSwapTransaction","_x24","_x25","unlockFunds","_callee18","_client$swap2","_getState$swap10","claimSwapParams","_context18","claimSwap","switchSides","hideErrors","_x15","confirmSwap","_x16","_x17","waitForSwapConfirmation","_ref4","_x22","_x23","_ref6","_callee6","_getState$swap2","refundTransaction","_context6","findRefundSwapTransaction","_x26","_x27","redeemSwap","_ref7","_callee7","_context7","_x30","_x31","refundSwap","_ref8","_callee9","_getState$swap3","_context9","_callee8","refundTxHash","_context8","_x32","_x33","SET_ASSET","CHANGE_AMOUNT","CHANGE_RATE","setAsset","changeAmount","newValue","newVal","toString","newRate","changeRate","getReducerFunction","reducerMap","initialState","fallbackFunction","action","reducer","_reducers","swapTypes","$set","assetTypes","chosen","wallets_reducers","walletTypes","cleanState","$merge","CHANGE_COUNTER_PARTY_ADDRESS","changeCounterPartyAddress","counterparty_reducers","counterPartyTypes","valid","objectSpread","secretparams_reducers","sha256","OPEN_ASSET_SELECTOR","CLOSE_ASSET_SELECTOR","SET_ASSET_SELECTOR_SEARCH","openAssetSelector","closeAssetSelector","setAssetSelectorSearch","open","search","assetSelector_reducers","combineReducers","assetSelector","history","createBrowserHistory","basename","initialAppState","createStore","connectRouter","reducers","applyMiddleware","thunk","routerMiddleware","errorHandler","e","WalletError","NodeError","errorActions","getIcon","code","require","toLowerCase","SwapPairPanel","_this","haveCurrency","props","wantCurrency","showHave","focusSide","showWant","react_default","createElement","className","src","assetUtils","classNames","SwapPairPanel_asset_interactive","onHaveClick","alt","onClick","onWantClick","AssetsBG","onIconClick","SwapPairPanel_labels_have_faded","haveLabel","SwapPairPanel_labels_want_faded","wantLabel","showCurrencyLabels","SwapPairPanel_currency_labels_interactive","Component","defaultProps","AssetSelector","configuredAssets","displayedAssets","entries","slicedToArray","excludeAsset","placeholder","onChange","onSearchChange","target","onClose","closeIcon","key","onSelectAsset","Button","classes","push","primary","secondary","wide","small","showLoader","disabled","tabIndex","Spinner","children","AssetSelection","_this$props$assets","components_SwapPairPanel_SwapPairPanel","handlePairPanelAssetClick","SwapIcon","components_AssetSelector_AssetSelector","handleSelectAsset","components_Button_Button","withRouter","connect","assetSelectorActions","assetActions","withCopyButton","WrappedComponent","_React$Component","_class","classCallCheck","possibleConstructorReturn","getPrototypeOf","inherits","createClass","tempInput","document","style","body","appendChild","select","execCommand","removeChild","assign","onCopyClick","handleCopyClick","React","ExpirationDetails","call","getExpirationState","displayOrder","find","isClaim","now","transaction","getTransaction","interval","setInterval","tick","bind","clearInterval","setState","_this2","maxNow","left","diff","passed","total","filled","asSeconds","ClockIcon","utc","asMilliseconds","format","CopyIcon","width","ownProps","AddressInput","formattedAddress","TickIcon","ErrorIcon","CounterPartyWallets","components_AddressInput_AddressInput","onCounterPartyAddressChange","CurrencyInput","readOnly","Rate","currencyA","currencyB","CurrencyInputs","components_CurrencyInput_CurrencyInput","onAmountChange","showRate","components_Rate_Rate","newValueA","onRateChange","onSwitchSides","InitiatorExpirationInfo","LockIcon","asHours","WalletDisplay","WalletIcon","onButtonClick","WalletPanel","_this$props$wallets","components_WalletDisplay_WalletDisplay","onToggleWalletConnect","SwapInitiation","containers_CurrencyInputs","containers_WalletPanel","HandshakeIcon","containers_CounterPartyWallets","components_ExpirationDetails","containers_InitiatorExpirationInfo","BrandCard","components_BrandCard_BrandCard","CompletedIcon","onNextClick","WalletChoose","onCancel","networksMap","WalletConnect","networkId","subTitle","isTestnet","WalletConnecting","cancelWallet","cancelText","shortenAddress","substring","WalletConnected","onOk","disconnectText","WalletConnectPopup","assertThisInitialized","_this$props","_this$props2","walletConnectBody","walletConnected","components_WalletConnected_WalletConnected","handleClose","walletConnecting","components_WalletConnecting_WalletConnecting","walletChosen","components_WalletConnect_WalletConnect","components_WalletChoose_WalletChoose","Modal_default","ErrorModal","CloseIcon","Waiting","getWaitingStatus","LiqualityLogo","components_WalletConnectPopup_WalletConnectPopup","onWalletDisconnected","containers_WalletPopups","onWalletConnected","WalletPopups","SwapRedemption","safeClaimTime","getClaimErrors","SwapCompleted","data-size","SwapRefund","HexaDisplay","onCopyLink","SwapRefunded","components_HexaDisplay_HexaDisplay","SwapProgressStepper","activeStep","findIndex","connector","index_es","active","completed","line","root","alternativeLabel","index","stepIconProps","text","StepIconProps","LiqualitySwap","getCounterPartyLinkCard","getBackupLinkCard","getConnectWallet","components_BackupLinkCard_BackupLinkCard","_this3","components_CounterPartyLinkCard_CounterPartyLinkCard","currentWallet","_this4","closeAction","_this5","components_SwapProgressStepper_SwapProgressStepper","Route","exact","component","render","dangerouslySetInnerHTML","__html","components_ErrorModal_ErrorModal","walletsActions","onbeforeunload","addEventListener","reason","App","es","lib","containers_LiqualitySwap","Boolean","hostname","match","script","check","innerHTML","getElementsByTagName","ReactDOM","navigator","userAgent","vendor","opera","test","substr","margin","textAlign","src_App_0","getElementById","serviceWorker","ready","then","registration","unregister","./$pac.svg","./2give.svg","./abt.svg","./act.svg","./actn.svg","./ada.svg","./add.svg","./adx.svg","./ae.svg","./aeon.svg","./aeur.svg","./agi.svg","./agrs.svg","./aion.svg","./amb.svg","./amp.svg","./ant.svg","./apex.svg","./appc.svg","./ardr.svg","./arg.svg","./ark.svg","./arn.svg","./ary.svg","./ast.svg","./atm.svg","./audr.svg","./auto.svg","./aywa.svg","./bab.svg","./bat.svg","./bay.svg","./bcbc.svg","./bcc.svg","./bcd.svg","./bch.svg","./bcio.svg","./bcn.svg","./bco.svg","./bcpt.svg","./bdl.svg","./beam.svg","./bela.svg","./bix.svg","./blcn.svg","./blk.svg","./block.svg","./blz.svg","./bnb.svg","./bnt.svg","./bnty.svg","./booty.svg","./bos.svg","./bpt.svg","./bq.svg","./brd.svg","./bsd.svg","./bsv.svg","./btc.svg","./btcd.svg","./btch.svg","./btcp.svg","./btcz.svg","./btdx.svg","./btg.svg","./btm.svg","./bts.svg","./btt.svg","./btx.svg","./burst.svg","./call.svg","./cc.svg","./cdn.svg","./cdt.svg","./cenz.svg","./chain.svg","./chat.svg","./chips.svg","./cix.svg","./clam.svg","./cloak.svg","./cmm.svg","./cmt.svg","./cnd.svg","./cnx.svg","./cny.svg","./cob.svg","./colx.svg","./coqui.svg","./cred.svg","./crpt.svg","./crw.svg","./cs.svg","./ctr.svg","./ctxc.svg","./cvc.svg","./dai.svg","./dash.svg","./dat.svg","./data.svg","./dbc.svg","./dcn.svg","./dcr.svg","./deez.svg","./dent.svg","./dew.svg","./dgb.svg","./dgd.svg","./dlt.svg","./dnr.svg","./dnt.svg","./dock.svg","./doge.svg","./drgn.svg","./drop.svg","./dta.svg","./dth.svg","./dtr.svg","./ebst.svg","./eca.svg","./edg.svg","./edo.svg","./edoge.svg","./ela.svg","./elf.svg","./elix.svg","./ella.svg","./emc.svg","./emc2.svg","./eng.svg","./enj.svg","./entrp.svg","./eon.svg","./eop.svg","./eos.svg","./eqli.svg","./equa.svg","./etc.svg","./eth.svg","./ethos.svg","./etn.svg","./etp.svg","./eur.svg","./evx.svg","./exmo.svg","./exp.svg","./fair.svg","./fct.svg","./fil.svg","./fjc.svg","./fldc.svg","./flo.svg","./fsn.svg","./ftc.svg","./fuel.svg","./fun.svg","./game.svg","./gas.svg","./gbp.svg","./gbx.svg","./gbyte.svg","./generic.svg","./gin.svg","./glxt.svg","./gmr.svg","./gno.svg","./gnt.svg","./gold.svg","./grc.svg","./grin.svg","./grs.svg","./gsc.svg","./gto.svg","./gup.svg","./gusd.svg","./gvt.svg","./gxs.svg","./gzr.svg","./hight.svg","./hodl.svg","./hot.svg","./hpb.svg","./hsr.svg","./ht.svg","./html.svg","./huc.svg","./hush.svg","./icn.svg","./icx.svg","./ignis.svg","./ilk.svg","./ink.svg","./ins.svg","./ion.svg","./iop.svg","./iost.svg","./iotx.svg","./iq.svg","./itc.svg","./jnt.svg","./jpy.svg","./kcs.svg","./kin.svg","./kmd.svg","./knc.svg","./krb.svg","./lbc.svg","./lend.svg","./link.svg","./lkk.svg","./loom.svg","./lpt.svg","./lrc.svg","./lsk.svg","./ltc.svg","./lun.svg","./maid.svg","./mana.svg","./mcap.svg","./mco.svg","./mda.svg","./mds.svg","./med.svg","./meetone.svg","./miota.svg","./mith.svg","./mkr.svg","./mln.svg","./mnx.svg","./mnz.svg","./moac.svg","./mod.svg","./mona.svg","./msr.svg","./mth.svg","./mtl.svg","./music.svg","./mzc.svg","./nano.svg","./nas.svg","./nav.svg","./ncash.svg","./ndz.svg","./nebl.svg","./neo.svg","./neos.svg","./neu.svg","./nexo.svg","./ngc.svg","./nio.svg","./nlc2.svg","./nlg.svg","./nmc.svg","./npxs.svg","./nuls.svg","./nxs.svg","./nxt.svg","./oax.svg","./ok.svg","./omg.svg","./omni.svg","./ong.svg","./ont.svg","./oot.svg","./ost.svg","./ox.svg","./part.svg","./pasc.svg","./pasl.svg","./pax.svg","./pay.svg","./payx.svg","./pink.svg","./pirl.svg","./pivx.svg","./plr.svg","./poa.svg","./poe.svg","./polis.svg","./poly.svg","./pot.svg","./powr.svg","./ppc.svg","./ppp.svg","./ppt.svg","./pre.svg","./prl.svg","./pungo.svg","./pura.svg","./qash.svg","./qiwi.svg","./qlc.svg","./qrl.svg","./qsp.svg","./qtum.svg","./r.svg","./rads.svg","./rap.svg","./rcn.svg","./rdd.svg","./rdn.svg","./rep.svg","./req.svg","./rhoc.svg","./ric.svg","./rise.svg","./rlc.svg","./rpx.svg","./rub.svg","./rvn.svg","./ryo.svg","./safe.svg","./salt.svg","./san.svg","./sbd.svg","./sberbank.svg","./sc.svg","./shift.svg","./sib.svg","./sky.svg","./slr.svg","./sls.svg","./smart.svg","./sngls.svg","./snm.svg","./snt.svg","./soc.svg","./spank.svg","./sphtx.svg","./srn.svg","./stak.svg","./start.svg","./steem.svg","./storj.svg","./storm.svg","./stq.svg","./strat.svg","./sub.svg","./sumo.svg","./sys.svg","./taas.svg","./tau.svg","./tbx.svg","./tel.svg","./ten.svg","./tern.svg","./tghc.svg","./theta.svg","./tix.svg","./tkn.svg","./tks.svg","./tnb.svg","./tnc.svg","./tnt.svg","./tomo.svg","./tpay.svg","./trig.svg","./trtl.svg","./trx.svg","./tusd.svg","./tzc.svg","./ubq.svg","./unity.svg","./usd.svg","./usdc.svg","./usdt.svg","./utk.svg","./veri.svg","./vet.svg","./via.svg","./vib.svg","./vibe.svg","./vivo.svg","./vrc.svg","./vrsc.svg","./vtc.svg","./vtho.svg","./wabi.svg","./wan.svg","./waves.svg","./wax.svg","./wgr.svg","./wicc.svg","./wings.svg","./wpr.svg","./wtc.svg","./x.svg","./xas.svg","./xbc.svg","./xby.svg","./xcp.svg","./xdn.svg","./xem.svg","./xin.svg","./xlm.svg","./xmcc.svg","./xmg.svg","./xmo.svg","./xmr.svg","./xmy.svg","./xp.svg","./xpa.svg","./xpm.svg","./xrp.svg","./xsg.svg","./xtz.svg","./xuc.svg","./xvc.svg","./xvg.svg","./xzc.svg","./yoyow.svg","./zcl.svg","./zec.svg","./zel.svg","./zen.svg","./zest.svg","./zil.svg","./zilla.svg","./zrx.svg","webpackContext","req","webpackContextResolve","Error"],"mappings":"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AAA,IACAC,aAAA,IACAC,YAAA,IACAC,YAAA,IACAC,aAAA,IACAC,YAAA,IACAC,aAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,aAAA,IACAC,aAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,aAAA,IACAC,aAAA,IACAC,aAAA,IACAC,aAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,aAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,cAAA,IACAC,YAAA,IACAC,YAAA,IACAC,aAAA,IACAC,aAAA,IACAC,YAAA,IACAC,aAAA,IACAC,YAAA,IACAC,YAAA,IACAC,cAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,aAAA,IACAC,aAAA,IACAC,YAAA,IACAC,YAAA,IACAC,cAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,aAAA,IACAC,YAAA,IACAC,aAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,aAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,aAAA,IACAC,YAAA,IACAC,aAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,cAAA,IACAC,gBAAA,IACAC,YAAA,IACAC,aAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,aAAA,IACAC,YAAA,IACAC,aAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,aAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,cAAA,IACAC,aAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,WAAA,IACAC,aAAA,IACAC,YAAA,IACAC,aAAA,IACAC,YAAA,IACAC,YAAA,IACAC,cAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,aAAA,IACAC,aAAA,IACAC,WAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,aAAA,IACAC,aAAA,IACAC,YAAA,IACAC,aAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,aAAA,IACAC,aAAA,IACAC,aAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,gBAAA,IACAC,cAAA,IACAC,aAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,aAAA,IACAC,YAAA,IACAC,aAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,cAAA,IACAC,YAAA,IACAC,aAAA,IACAC,YAAA,IACAC,YAAA,IACAC,cAAA,IACAC,YAAA,IACAC,aAAA,IACAC,YAAA,IACAC,aAAA,IACAC,YAAA,IACAC,aAAA,IACAC,YAAA,IACAC,YAAA,IACAC,aAAA,IACAC,YAAA,IACAC,YAAA,IACAC,aAAA,IACAC,aAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,WAAA,IACAC,YAAA,IACAC,aAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,WAAA,IACAC,aAAA,IACAC,aAAA,IACAC,aAAA,IACAC,YAAA,IACAC,YAAA,IACAC,aAAA,IACAC,aAAA,IACAC,aAAA,IACAC,aAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,cAAA,IACAC,aAAA,IACAC,YAAA,IACAC,aAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,cAAA,IACAC,aAAA,IACAC,aAAA,IACAC,aAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,aAAA,IACAC,UAAA,IACAC,aAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,aAAA,IACAC,YAAA,IACAC,aAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,YAAA,IACAC,aAAA,IACAC,aAAA,IACAC,YAAA,IACAC,YAAA,IACAC,iBAAA,IACAC,WAAA,IACAC,cAAA,KACAC,YAAA,KACAC,YAAA,KACAC,YAAA,KACAC,YAAA,KACAC,cAAA,KACAC,cAAA,KACAC,YAAA,KACAC,YAAA,KACAC,YAAA,KACAC,cAAA,KACAC,cAAA,KACAC,YAAA,KACAC,aAAA,KACAC,cAAA,KACAC,cAAA,KACAC,cAAA,KACAC,cAAA,KACAC,YAAA,KACAC,cAAA,KACAC,YAAA,KACAC,aAAA,KACAC,YAAA,KACAC,aAAA,KACAC,YAAA,KACAC,YAAA,KACAC,YAAA,KACAC,YAAA,KACAC,aAAA,KACAC,aAAA,KACAC,cAAA,KACAC,YAAA,KACAC,YAAA,KACAC,YAAA,KACAC,YAAA,KACAC,YAAA,KACAC,YAAA,KACAC,aAAA,KACAC,aAAA,KACAC,aAAA,KACAC,aAAA,KACAC,YAAA,KACAC,aAAA,KACAC,YAAA,KACAC,YAAA,KACAC,cAAA,KACAC,YAAA,KACAC,aAAA,KACAC,aAAA,KACAC,YAAA,KACAC,aAAA,KACAC,YAAA,KACAC,YAAA,KACAC,YAAA,KACAC,aAAA,KACAC,aAAA,KACAC,YAAA,KACAC,aAAA,KACAC,YAAA,KACAC,aAAA,KACAC,aAAA,KACAC,YAAA,KACAC,cAAA,KACAC,YAAA,KACAC,YAAA,KACAC,aAAA,KACAC,cAAA,KACAC,YAAA,KACAC,YAAA,KACAC,UAAA,KACAC,YAAA,KACAC,YAAA,KACAC,YAAA,KACAC,YAAA,KACAC,YAAA,KACAC,YAAA,KACAC,YAAA,KACAC,YAAA,KACAC,aAAA,KACAC,YAAA,KACAC,YAAA,KACAC,YAAA,KACAC,YAAA,KACAC,WAAA,KACAC,YAAA,KACAC,YAAA,KACAC,YAAA,KACAC,YAAA,KACAC,YAAA,KACAC,YAAA,KACAC,YAAA,KACAC,YAAA,KACAC,YAAA,KACAC,cAAA,KACAC,YAAA,KACAC,YAAA,KACAC,YAAA,KACAC,YAAA,KACAC,aAAA,KACAC,YAAA,KACAC,cAAA,KACAC,YAAA,MAIA,SAAAC,eAAAC,GACA,IAAA5jC,EAAA6jC,sBAAAD,GACA,OAAArqC,EAAAyG,GAEA,SAAA6jC,sBAAAD,GACA,IAAA5jC,EAAAsK,EAAAs5B,GACA,KAAA5jC,EAAA,IACA,IAAAgY,EAAA,IAAA8rB,MAAA,uBAAAF,EAAA,KAEA,MADA5rB,EAAAK,KAAA,mBACAL,EAEA,OAAAhY,EAEA2jC,eAAAz2B,KAAA,WACA,OAAAhT,OAAAgT,KAAA5C,IAEAq5B,eAAAtjC,QAAAwjC,sBACAxqC,EAAAC,QAAAqqC,eACAA,eAAA3jC,GAAA,wBCzbA3G,EAAAC,QAAiBC,EAAAC,EAAuB","file":"static/js/main.157dec74.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/blank-asset.3e19fc7b.svg\";","const types = {\n  SET_ERROR: 'SET_ERROR'\n}\n\nlet timeout\n\nfunction clearError () {\n  return { type: types.SET_ERROR, error: null }\n}\n\nfunction setError (error) {\n  return async (dispatch) => {\n    if (timeout) {\n      clearTimeout(timeout)\n    }\n    timeout = setTimeout(() => {\n      dispatch(clearError())\n    }, 10000)\n    dispatch({ type: types.SET_ERROR, error })\n  }\n}\n\nconst actions = {\n  setError,\n  clearError\n}\n\nexport { types, actions }\n","import Client from '@liquality/client'\n\nconst footerVersion = `${process.env.REACT_APP_TRAVIS_COMMIT || 'dev'}+${Client.version}`\n\nexport default {\n  assets: {\n    eth: {\n      rpc: {\n        url: 'https://rinkeby.infura.io/v3/3bbb5ebeb45e4b2b9a35261f272fb611'\n      },\n      network: 'rinkeby'\n    },\n    btc: {\n      rpc: {\n        username: 'bitcoin',\n        password: 'local321',\n        url: 'https://liquality.io/bitcointestnetrpc/'\n      },\n      feeNumberOfBlocks: 2,\n      network: 'bitcoin_testnet'\n    },\n    midman: {\n      type: 'erc20',\n      rpc: {\n        url: 'https://rinkeby.infura.io/v3/3bbb5ebeb45e4b2b9a35261f272fb611'\n      },\n      contractAddress: '0xcE2748BE67fB4346654B4500c4BB0642536365FC',\n      network: 'rinkeby'\n    }\n  },\n  minConfirmations: 0,\n  injectScript: `\n  function addSentry () {\n    (function loadScript(src, callback) {\n      var s,\n          r,\n          t;\n      r = false;\n      s = document.createElement('script');\n      s.type = 'text/javascript';\n      s.src = src;\n      s.onload = s.onreadystatechange = function() {\n        //console.log( this.readyState ); //uncomment this line to see which ready states are called.\n        if ( !r && (!this.readyState || this.readyState == 'complete') )\n        {\n          r = true;\n          callback();\n        }\n      };\n      t = document.getElementsByTagName('script')[0];\n      t.parentNode.insertBefore(s, t);\n    })('https://browser.sentry-cdn.com/4.6.4/bundle.min.js', function () {\n      Sentry.init({\n        dsn: 'https://12ddc74cff10472ebb8a940da86e12d9@sentry.io/1415462',\n        release: '${footerVersion}'\n      })\n    });\n  }\n\n  function addGA () {\n    (function(w,d,s,l,i){w[l]=w[l]||[];w[l].push({'gtm.start':\n    new Date().getTime(),event:'gtm.js'});var f=d.getElementsByTagName(s)[0],\n    j=d.createElement(s),dl=l!='dataLayer'?'&l='+l:'';j.async=true;j.src=\n    'https://www.googletagmanager.com/gtm.js?id='+i+dl;f.parentNode.insertBefore(j,f);\n    })(window,document,'script','dataLayer','GTM-52D86Z5');\n\n    // Router GA Pageview\n    const sendPageView = (path) => {\n      window.ga('set', 'page', path);\n      window.ga('send', 'pageview');\n    }\n\n    var pushState = history.pushState;\n    history.pushState = function () {\n      pushState.apply(history, arguments);\n      sendPageView(arguments[2])\n    };\n\n    window.onpopstate = function (e) {\n      sendPageView(document.location.pathname + document.location.search)\n    };\n  }\n\n  function addFullStory () {\n    window['_fs_debug'] = false;\n    window['_fs_host'] = 'fullstory.com';\n    window['_fs_org'] = 'JY1D7';\n    window['_fs_namespace'] = 'FS';\n    (function(m,n,e,t,l,o,g,y){\n      if (e in m) {if(m.console && m.console.log) { m.console.log('FullStory namespace conflict. Please set window[\"_fs_namespace\"].');} return;}\n      g=m[e]=function(a,b,s){g.q?g.q.push([a,b,s]):g._api(a,b,s);};g.q=[];\n      o=n.createElement(t);o.async=1;o.src='https://'+_fs_host+'/s/fs.js';\n      y=n.getElementsByTagName(t)[0];y.parentNode.insertBefore(o,y);\n      g.identify=function(i,v,s){g(l,{uid:i},s);if(v)g(l,v,s)};g.setUserVars=function(v,s){g(l,v,s)};g.event=function(i,v,s){g('event',{n:i,p:v},s)};\n      g.shutdown=function(){g(\"rec\",!1)};g.restart=function(){g(\"rec\",!0)};\n      g.consent=function(a){g(\"consent\",!arguments.length||a)};\n      g.identifyAccount=function(i,v){o='account';v=v||{};v.acctId=i;g(o,v)};\n      g.clearUserCookie=function(){};\n    })(window,document,window['_fs_namespace'],'script','user');\n  }\n\n  function addAnalytics () {\n    addGA();\n    addSentry();\n    addFullStory();\n  }\n\n  if (window.localStorage.getItem('enableAnalytics') == 'true') {\n    console.log('Analytics enabled')\n    addAnalytics();\n  }\n\n  function acceptTerms () {\n    window.localStorage.setItem('acceptedTerms', true);\n    window.localStorage.setItem('enableAnalytics', document.getElementById('analytics-checkbox').checked);\n    window.onbeforeunload = null;\n    location.reload();\n  }\n\n  function termsLoaded () {\n    if (!(window.localStorage.getItem('acceptedTerms') == 'true')) {\n      document.getElementById(\"terms\").style = '';\n    }\n  }\n  `,\n  injectFooter: `<p style=\"text-align: center; margin-bottom: 8px\">\n  <a href=\"https://liquality.io/support\" target=\"_blank\">Support</a>\n  &nbsp;|&nbsp;\n  <a href=\"https://liquality.io/terms-of-use/standalone.html\" target=\"_blank\">Terms of Use</a>\n  &nbsp;|&nbsp;\n  <a href=\"https://liquality.io/privacy-policy\" target=\"_blank\">Privacy Policy</a>\n  </p>\n  <p style=\"text-align: center;font-size: 80%; color: #aaa\">${footerVersion}</p>\n  <style>\n    #terms {\n      width: 100%;\n      height: 100%;\n      color: white;\n      position:absolute;\n      background: rgba(0, 0, 0, 70%);\n      top: 0;\n      bottom: 0;\n      right: 0;\n      left: 0;\n    }\n\n    .terms-wrapper {\n      position: absolute;\n      z-index: 999;\n      top: 100px;\n      left: 100px;\n      right: 100px;\n      bottom: 200px;\n    }\n  </style>\n  <div id=\"terms\" style=\"display: none;\">\n    <div class=\"terms-wrapper\">\n      <iframe style=\"width: 100%; height: 100%;\" src=\"https://liquality.io/terms-of-use/standalone.html\"></iframe>\n      <p><input type=\"checkbox\" id=\"analytics-checkbox\"/> Enable analytics to help us better understand issues and improve the experience.</p>\n      <div style=\"text-align: center;\">\n        <button\n          class=\"Button btn btn-primary Button_wide\"\n          onclick=\"acceptTerms()\"\n          >I Accept</button>\n      </div>\n    </div>\n  </div>\n  <img src onerror=\"termsLoaded()\">\n  `\n}\n","import _ from 'lodash'\n\nimport defaultConfig from './default'\nimport buildtimeConfig from './config'\nconst runtimeConfig = window.config\n\nconst finalConfig = _.clone(defaultConfig)\n_.merge(finalConfig, _.isEmpty(runtimeConfig) ? buildtimeConfig : runtimeConfig)\nconsole.log(finalConfig)\n\nexport default finalConfig\n","export default {\n  injectScript: '',\n  injectFooter: '',\n  debug: false,\n  twitterButton: false,\n  minConfirmations: 1\n}\n","/* global web3, localStorage */\n\nimport Client from '@liquality/client'\nimport BitcoinBitcoreRpcProvider from '@liquality/bitcoin-bitcore-rpc-provider'\nimport BitcoinLedgerProvider from '@liquality/bitcoin-ledger-provider'\nimport BitcoinSwapProvider from '@liquality/bitcoin-swap-provider'\nimport BitcoinJsLibSwapProvider from '@liquality/bitcoin-bitcoinjs-lib-swap-provider'\nimport BitcoinNetworks from '@liquality/bitcoin-networks'\n\nimport EthereumRpcProvider from '@liquality/ethereum-rpc-provider'\nimport EthereumLedgerProvider from '@liquality/ethereum-ledger-provider'\nimport EthereumNetworks from '@liquality/ethereum-networks'\nimport EthereumSwapProvider from '@liquality/ethereum-swap-provider'\nimport EthereumErc20Provider from '@liquality/ethereum-erc20-provider'\nimport EthereumErc20SwapProvider from '@liquality/ethereum-erc20-swap-provider'\nimport EthereumMetaMaskProvider from '@liquality/ethereum-metamask-provider'\n\nimport config from '../config'\n\nfunction createBtcClient (asset, wallet) {\n  const btcConfig = config.assets.btc\n  const btcClient = new Client()\n  btcClient.addProvider(new BitcoinBitcoreRpcProvider(\n    btcConfig.rpc.url,\n    btcConfig.rpc.username,\n    btcConfig.rpc.password,\n    btcConfig.feeNumberOfBlocks\n  ))\n  if (wallet === 'bitcoin_ledger') {\n    const ledger = new BitcoinLedgerProvider({network: BitcoinNetworks[btcConfig.network]})\n\n    if (window.useWebBle || localStorage.useWebBle) {\n      ledger.useWebBle()\n    }\n\n    btcClient.addProvider(ledger)\n    btcClient.addProvider(new BitcoinSwapProvider({network: BitcoinNetworks[btcConfig.network]}))\n  } else if (wallet === 'bitcoin_node') {\n    btcClient.addProvider(new BitcoinJsLibSwapProvider({network: BitcoinNetworks[btcConfig.network]}))\n  } else {\n    // Verify functions required when wallet not connected\n    btcClient.addProvider(new BitcoinSwapProvider({network: BitcoinNetworks[btcConfig.network]}))\n  }\n  return btcClient\n}\n\nfunction createEthClient (asset, wallet) {\n  const ethConfig = config.assets.eth\n  const ethClient = new Client()\n  ethClient.addProvider(new EthereumRpcProvider(\n    ethConfig.rpc.url\n  ))\n  if (wallet === 'metamask') {\n    ethClient.addProvider(new EthereumMetaMaskProvider(web3.currentProvider, EthereumNetworks[ethConfig.network]))\n  } else if (wallet === 'ethereum_ledger') {\n    ethClient.addProvider(new EthereumLedgerProvider({network: EthereumNetworks[ethConfig.network]}))\n  }\n  ethClient.addProvider(new EthereumSwapProvider())\n  return ethClient\n}\n\nfunction createERC20Client (asset, wallet) {\n  const assetConfig = config.assets[asset]\n  const erc20Client = new Client()\n  erc20Client.addProvider(new EthereumRpcProvider(\n    assetConfig.rpc.url\n  ))\n  if (wallet === 'metamask') {\n    erc20Client.addProvider(new EthereumMetaMaskProvider(web3.currentProvider, EthereumNetworks[assetConfig.network]))\n  } else if (wallet === 'ethereum_ledger') {\n    erc20Client.addProvider(new EthereumLedgerProvider({network: EthereumNetworks[assetConfig.network]}))\n  }\n  erc20Client.addProvider(new EthereumErc20Provider(assetConfig.contractAddress))\n  erc20Client.addProvider(new EthereumErc20SwapProvider())\n  return erc20Client\n}\n\nconst clientCreators = {\n  btc: createBtcClient,\n  eth: createEthClient,\n  erc20: createERC20Client\n}\n\nconst clients = {}\n\nfunction getClient (asset, wallet) {\n  if (!(asset in clients)) {\n    clients[asset] = {}\n  }\n  if (wallet in clients[asset]) return clients[asset][wallet]\n  const assetConfig = config.assets[asset]\n  const creator = clientCreators[asset] || clientCreators[assetConfig.type]\n  const client = creator(asset, wallet)\n  clients[asset][wallet] = client\n  return client\n}\n\nexport { getClient }\n","const types = {\n  SET_SECRET: 'SET_SECRET',\n  SET_SECRET_HASH: 'SET_SECRET_HASH'\n}\n\nfunction setSecret (secret) {\n  return { type: types.SET_SECRET, secret }\n}\n\nfunction setSecretHash (secretHash) {\n  return { type: types.SET_SECRET_HASH, secretHash }\n}\n\nconst actions = {\n  setSecret,\n  setSecretHash\n}\n\nexport { types, actions }\n","const steps = Object.freeze({\n  INITIATION: 'initiation',\n  AGREEMENT: 'agreement',\n  CLAIMING: 'claiming',\n  SETTLED: 'settled'\n})\n\nconst stepData = [\n  { id: steps.INITIATION, label: 'Swap initiation' },\n  { id: steps.AGREEMENT, label: 'Counterparties agree' },\n  { id: steps.CLAIMING, label: 'Claiming' },\n  { id: steps.SETTLED, label: 'Settlement' }\n]\n\nexport { steps, stepData }\n","const sleep = ms => new Promise(resolve => setTimeout(resolve, ms))\n\nexport { sleep }\n","import moment from 'moment'\n\nconst expirationDurations = {\n  a: moment.duration(12, 'h'),\n  b: moment.duration(6, 'h')\n}\n\nfunction getFundExpiration (expiration, party) {\n  let start, duration, time\n\n  if (party === 'b') {\n    time = moment(expiration).subtract(expirationDurations.b)\n    duration = expirationDurations.b\n    start = moment(expiration).subtract(expirationDurations.a)\n  } else {\n    time = expiration\n    duration = expirationDurations.a\n    start = moment(expiration).subtract(expirationDurations.a)\n  }\n\n  return {\n    start,\n    duration,\n    time\n  }\n}\n\nfunction getClaimExpiration (expiration, party) {\n  return party === 'a'\n    ? getFundExpiration(expiration, 'b')\n    : getFundExpiration(expiration, 'a')\n}\n\nfunction generateExpiration () {\n  return moment().add(expirationDurations.a)\n}\n\nexport { expirationDurations, getFundExpiration, getClaimExpiration, generateExpiration }\n","import queryString from 'qs'\nimport moment from 'moment'\n\nconst APP_BASE_URL = `${window.location.protocol}//${window.location.host}${window.location.pathname}`\n\nfunction generateLink (swap, counterparty = false) {\n  let assetA, assetB, walletA, walletB, transactionsA, transactionsB, counterPartyA, counterPartyB\n  if (counterparty) { // Switch around sides as this will be the state of the counter party\n    ({ a: assetB, b: assetA } = swap.assets)\n    ;({ a: walletB, b: walletA } = swap.wallets)\n    ;({ a: transactionsB, b: transactionsA } = swap.transactions)\n    ;({ a: counterPartyB, b: counterPartyA } = swap.counterParty)\n  } else {\n    ({ a: assetA, b: assetB } = swap.assets)\n    ;({ a: walletA, b: walletB } = swap.wallets)\n    ;({ a: transactionsA, b: transactionsB } = swap.transactions)\n    ;({ a: counterPartyA, b: counterPartyB } = swap.counterParty)\n  }\n\n  const urlParams = {\n    ccy1: assetA.currency,\n    ccy1v: assetA.value,\n    ccy1Addr: counterparty ? counterPartyA.address : walletA.addresses[0],\n    ccy1CounterPartyAddr: counterparty ? walletA.addresses[0] : counterPartyA.address,\n\n    ccy2: assetB.currency,\n    ccy2v: assetB.value,\n    ccy2Addr: counterparty ? counterPartyB.address : walletB.addresses[0],\n    ccy2CounterPartyAddr: counterparty ? walletB.addresses[0] : counterPartyB.address,\n\n    aFundHash: transactionsA.fund.hash,\n    bFundHash: transactionsB.fund.hash,\n\n    aFundBlock: transactionsA.fund.block,\n    bFundBlock: transactionsB.fund.block,\n\n    secretHash: swap.secretParams.secretHash,\n\n    expiration: swap.expiration.unix(),\n\n    isPartyB: counterparty === true\n  }\n  return `${APP_BASE_URL}#${queryString.stringify(urlParams)}`\n}\n\nfunction generateSwapState (location) {\n  if (!location.hash) return undefined // no state\n  const urlParams = queryString.parse(location.hash.replace('#', ''))\n\n  return {\n    assets: {\n      a: { currency: urlParams.ccy1, value: parseFloat(urlParams.ccy1v) },\n      b: { currency: urlParams.ccy2, value: parseFloat(urlParams.ccy2v) }\n    },\n    wallets: {\n      a: { addresses: [urlParams.ccy1Addr] },\n      b: { addresses: [urlParams.ccy2Addr] }\n    },\n    counterParty: {\n      a: { address: urlParams.ccy1CounterPartyAddr },\n      b: { address: urlParams.ccy2CounterPartyAddr }\n    },\n    transactions: {\n      a: { fund: { hash: urlParams.aFundHash, block: urlParams.aFundBlock }, claim: {} },\n      b: { fund: { hash: urlParams.bFundHash, block: urlParams.bFundBlock }, claim: {} }\n    },\n    secretParams: {\n      secretHash: urlParams.secretHash\n    },\n    expiration: moment.unix(urlParams.expiration),\n    isPartyB: urlParams.isPartyB === 'true',\n    link: location.href\n  }\n}\n\nexport { APP_BASE_URL, generateLink, generateSwapState }\n","import _ from 'lodash'\nimport localStorage from 'store'\nimport { store } from '../store'\n\nfunction update (obj) {\n  const link = store.getState().swap.link\n  const item = localStorage.get(link)\n  if (!item) {\n    localStorage.set(link, obj)\n  } else {\n    const updated = _.clone(item)\n    _.merge(updated, obj)\n    localStorage.set(link, updated)\n  }\n}\n\nfunction get () {\n  const link = store.getState().swap.link\n  return localStorage.get(link)\n}\n\nexport default { update, get }\n","import { replace } from 'connected-react-router'\nimport _ from 'lodash'\nimport moment from 'moment'\nimport config from '../config'\nimport { actions as swapActions } from './swap'\nimport { actions as secretActions } from './secretparams'\nimport { steps } from '../components/SwapProgressStepper/steps'\nimport { getClient } from '../services/chainClient'\nimport { sleep } from '../utils/async'\nimport { getFundExpiration } from '../utils/expiration'\nimport { generateLink } from '../utils/app-links'\nimport storage from '../utils/storage'\n\nconst types = {\n  SET_TRANSACTION: 'SET_TRANSACTION'\n}\n\nasync function setSecret (swap, party, tx, dispatch) {\n  const currentParty = party === 'a' ? 'b' : 'a'\n  const client = getClient(swap.assets[currentParty].currency, swap.wallets[currentParty].type)\n  const secret = await client.swap.getSwapSecret(tx.hash)\n  dispatch(secretActions.setSecret(secret))\n}\n\nfunction setStep (transactions, isPartyB, dispatch) {\n  let step = steps.INITIATION\n  if (transactions.a.fund.hash) {\n    step = steps.AGREEMENT\n    if (transactions.b.fund.hash) {\n      if (transactions.a.fund.confirmations >= config.minConfirmations && transactions.b.fund.confirmations >= config.minConfirmations) {\n        if (transactions.b.claim.confirmations >= config.minConfirmations || !isPartyB) {\n          step = steps.CLAIMING\n        }\n        if (transactions.a.claim.hash) {\n          step = steps.SETTLED\n        }\n      }\n    }\n  }\n\n  dispatch(swapActions.setStep(step))\n}\n\nfunction setLocation (swap, currentLocation, dispatch) {\n  // Do not navigate away from backup link\n  if (currentLocation.pathname === '/backupLink') return\n\n  const hasInitiated = swap.transactions.a.fund.hash && swap.transactions.a.fund.confirmations > 0\n  const hasRefunded = swap.transactions.a.refund && swap.transactions.a.refund.hash\n  const canRefund = !swap.transactions.b.claim.hash || swap.transactions.b.claim.confirmations === 0\n  const swapExpiration = getFundExpiration(swap.expiration, swap.isPartyB ? 'b' : 'a').time\n  const swapExpired = moment().isAfter(swapExpiration)\n  if (hasInitiated && canRefund && swapExpired) {\n    if (hasRefunded) {\n      dispatch(replace('/refunded'))\n    } else {\n      dispatch(replace('/refund'))\n    }\n  } else if (swap.step === steps.AGREEMENT && currentLocation.pathname !== '/waiting') {\n    if (swap.isPartyB || swap.transactions.b.fund.hash) {\n      dispatch(replace('/waiting'))\n    } else {\n      dispatch(replace('/counterPartyLink'))\n    }\n  } else if (swap.step === steps.CLAIMING) {\n    dispatch(replace('/redeem'))\n  } else if (swap.step === steps.SETTLED) {\n    dispatch(replace('/completed'))\n  }\n}\n\nasync function monitorTransaction (swap, party, kind, tx, dispatch, getState) {\n  while (true) {\n    let client\n    if (kind === 'claim') {\n      const currentParty = party === 'a' ? 'b' : 'a'\n      client = getClient(swap.assets[currentParty].currency, swap.wallets[currentParty].type)\n    } else if (kind === 'fund') {\n      client = getClient(swap.assets[party].currency, swap.wallets[party].type)\n    } else if (kind === 'refund') {\n      client = getClient(swap.assets[party].currency, swap.wallets[party].type)\n    }\n    const updatedTransaction = await client.chain.getTransactionByHash(tx.hash)\n    if (updatedTransaction) {\n      dispatch({ type: types.SET_TRANSACTION, party, kind, tx: updatedTransaction })\n      if (kind === 'claim') {\n        await setSecret(swap, party, updatedTransaction, dispatch)\n      }\n    }\n    let state = getState()\n    setStep(state.swap.transactions, state.swap.isPartyB, dispatch)\n    state = getState()\n    setLocation(state.swap, state.router.location, dispatch)\n    await sleep(5000)\n  }\n}\n\nfunction setTransaction (party, kind, tx) {\n  return async (dispatch, getState) => {\n    dispatch({ type: types.SET_TRANSACTION, party, kind, tx })\n    let swap = getState().swap\n    if (!swap.link) {\n      const link = generateLink(getState().swap)\n      dispatch(swapActions.setLink(link))\n    }\n    swap = getState().swap\n    storage.update({ transactions: { [party]: { [kind]: { hash: tx.hash } } } })\n    await monitorTransaction(swap, party, kind, tx, dispatch, getState)\n  }\n}\n\nfunction loadTransactions () {\n  return async (dispatch, getState) => {\n    const data = storage.get()\n    if (data && data.transactions) {\n      const transactions = data.transactions\n      const transactionPaths = [\n        'a.fund.hash',\n        'b.fund.hash',\n        'a.claim.hash',\n        'b.claim.hash',\n        'a.refund.hash',\n        'b.refund.hash'\n      ]\n      transactionPaths.forEach(path => {\n        if (_.has(transactions, path)) {\n          const parts = path.split('.')\n          const party = parts[0]\n          const kind = parts[1]\n          const txHash = _.get(transactions, path)\n          dispatch(setTransaction(party, kind, { hash: txHash }))\n        }\n      })\n      const swapState = getState().swap\n      if (swapState.transactions.a.fund.hash && !swapState.transactions.b.claim.hash) {\n        dispatch(swapActions.waitForSwapClaim())\n      }\n      const swapExpiration = getFundExpiration(swapState.expiration, swapState.isPartyB ? 'b' : 'a').time\n      const swapExpired = moment().isAfter(swapExpiration)\n      if (swapState.transactions.a.fund.hash && swapExpired) {\n        dispatch(swapActions.waitForSwapRefund())\n      }\n    }\n  }\n}\n\nconst actions = {\n  setTransaction,\n  loadTransactions\n}\n\nexport { types, actions }\n","import { getClient } from '../services/chainClient'\nimport cryptoassets from '@liquality/cryptoassets'\n\nconst types = {\n  TOGGLE_WALLET_CONNECT: 'TOGGLE_WALLET_CONNECT',\n  CHOOSE_WALLET: 'CHOOSE_WALLET',\n  START_CONNECTING_WALLET: 'START_CONNECTING_WALLET',\n  CONNECT_WALLET: 'CONNECT_WALLET',\n  DISCONNECT_WALLET: 'DISCONNECT_WALLET'\n}\n\nfunction waitForWallet (party, currency, wallet) {\n  return async (dispatch, getState) => {\n    dispatch(chooseWallet(party, wallet))\n  }\n}\n\nfunction waitForWalletInitialization (party, currency, wallet) {\n  return async (dispatch, getState) => {\n    const {\n      assets,\n      wallets\n    } = getState().swap\n    dispatch(startConnecting(party))\n    const currencyCode = assets[party].currency\n    const currency = cryptoassets[currencyCode]\n    const client = getClient(currencyCode, wallet)\n    const addressesPerCall = 100\n    const unusedAddress = await client.wallet.getUnusedAddress()\n    let allAddresses = await client.wallet.getUsedAddresses(addressesPerCall)\n    allAddresses = [ ...new Set([ unusedAddress, ...allAddresses ].map(a => a.address)) ]\n    allAddresses = allAddresses.map(currency.formatAddress)\n    if (!wallets[party].addresses[0] !== null) { // Preserve the preset address for party B\n      const expectedAddress = wallets[party].addresses[0]\n      if (allAddresses.includes(expectedAddress)) {\n        allAddresses = [expectedAddress, ...allAddresses.filter(address => address !== expectedAddress)]\n      }\n    }\n    const balance = await client.chain.getBalance(allAddresses)\n    const formattedBalance = currency.unitToCurrency(balance).toFixed(6)\n    const otherParty = party === 'a' ? 'b' : 'a'\n    const swapState = getState().swap\n    const walletParty = swapState.assets[party].currency === currencyCode ? party : otherParty\n    if (swapState.wallets[walletParty].connecting) {\n      dispatch(connectWallet(walletParty, allAddresses, formattedBalance))\n    }\n  }\n}\n\nfunction toggleWalletConnect (party) {\n  return { type: types.TOGGLE_WALLET_CONNECT, party }\n}\n\nfunction chooseWallet (party, wallet) {\n  return { type: types.CHOOSE_WALLET, party, wallet }\n}\n\nfunction startConnecting (party) {\n  return { type: types.START_CONNECTING_WALLET, party }\n}\n\nfunction connectWallet (party, addresses, balance) {\n  return { type: types.CONNECT_WALLET, party, addresses, balance }\n}\n\nfunction disconnectWallet (party) {\n  return async (dispatch, getState) => {\n    dispatch({ type: types.DISCONNECT_WALLET, party, preserveAddress: getState().swap.isPartyB })\n  }\n}\n\nconst actions = {\n  waitForWallet,\n  waitForWalletInitialization,\n  toggleWalletConnect,\n  chooseWallet,\n  connectWallet,\n  disconnectWallet\n}\n\nexport { types, actions }\n","import config from '../config'\nimport metamask from '../icons/metamask.svg'\nimport ledger from '../icons/ledger.svg'\nimport node from '../icons/node.svg'\n\nconst wallets = {\n  'metamask': {\n    icon: metamask,\n    name: 'MetaMask',\n    connection: {\n      title: 'Login to MetaMask'\n    },\n    troubleshootConnectionLink: 'https://metamask.zendesk.com/hc/en-us/articles/360015489531-Getting-Started-With-MetaMask-Part-1-'\n  },\n  'bitcoin_ledger': {\n    icon: ledger,\n    name: 'Ledger',\n    connection: {\n      title: 'On your ledger',\n      description: 'Navigate to your Bitcoin account. Follow Ledger instructions to connect Bitcoin wallet'\n    },\n    troubleshootConnectionLink: 'https://support.ledger.com/hc/en-us/articles/115005195945'\n  },\n  'bitcoin_node': {\n    icon: node,\n    name: 'Node',\n    connection: {\n      title: 'On your node',\n      description: 'Make sure your Bitcoin node is running and available.'\n    },\n    troubleshootConnectionLink: 'https://github.com/bitpay/bitcore'\n  },\n  'ethereum_node': {\n    icon: node,\n    name: 'Node',\n    connection: {\n      title: 'On your node',\n      description: 'Make sure your Ethereum node is running and available.'\n    },\n    troubleshootConnectionLink: 'https://ethereum.gitbooks.io/frontier-guide/content/getting_a_client.html'\n  },\n  'ethereum_ledger': {\n    icon: ledger,\n    name: 'Ledger',\n    connection: {\n      title: 'On your ledger',\n      description: 'Navigate to your Ethereum account. Follow Ledger instructions to connect Ethereum wallet'\n    },\n    troubleshootConnectionLink: 'https://support.ledger.com/hc/en-us/articles/115005195945'\n  }\n}\n\nconst walletsByAsset = {\n  eth: ['metamask', 'ethereum_ledger', 'ethereum_node'],\n  btc: ['bitcoin_ledger', 'bitcoin_node'],\n  erc20: ['metamask', 'ethereum_ledger', 'ethereum_node']\n}\n\nfunction getAssetWallets (asset) {\n  const assetConfig = config.assets[asset]\n  return walletsByAsset[asset] || walletsByAsset[assetConfig.type]\n}\n\nexport { wallets, getAssetWallets }\n","import moment from 'moment'\nimport config from '../config'\nimport cryptoassets from '@liquality/cryptoassets'\nimport { generateSwapState } from './app-links'\nimport { getClaimExpiration } from './expiration'\n\nfunction getCurrencyInputErrors (assets) {\n  const errors = {}\n  const { a: assetA, b: assetB, rate: assetRate } = assets\n  if (!(assetA.value > 0)) errors.assetA = 'Amount not set'\n  if (!(assetB.value > 0)) errors.assetB = 'Amount not set'\n  if (!(assetRate > 0)) errors.rate = 'Please select the conversion rate'\n  return errors\n}\n\nfunction getWalletErrors (wallets, isPartyB) {\n  const errors = {}\n  const { a: walletA, b: walletB } = wallets\n  if (isPartyB) {\n    const initialSwapState = generateSwapState(window.location)\n    if (!wallets.a.addresses.includes(initialSwapState.wallets.a.addresses[0])) errors.walletA = 'Address does not match swap'\n    if (!wallets.b.addresses.includes(initialSwapState.wallets.b.addresses[0])) errors.walletB = 'Address does not match swap'\n  }\n  if (!walletA.connected) errors.walletA = 'Please add your wallet'\n  if (!walletB.connected) errors.walletB = 'Please add your wallet'\n  return errors\n}\n\nfunction getCounterPartyErrors (assets, counterParty) {\n  const errors = {}\n  const { a: counterPartyA, b: counterPartyB } = counterParty\n  const { a: assetA, b: assetB } = assets\n  if (!cryptoassets[assetA.currency].isValidAddress(counterPartyA.address)) errors.counterPartyA = 'Address incomplete'\n  if (!cryptoassets[assetB.currency].isValidAddress(counterPartyB.address)) errors.counterPartyB = 'Address incomplete'\n  return errors\n}\n\nfunction getInitiationErrors (transactions, expiration, isVerified, isPartyB) {\n  const errors = {}\n  if (isPartyB) {\n    if (!(isVerified && transactions.b.fund.confirmations >= config.minConfirmations)) {\n      errors.initiation = 'Counterparty has initiated, awaiting confirmations'\n    }\n    if (!(isVerified && transactions.b.fund.hash)) {\n      errors.initiation = 'Counterparty hasn\\'t initiated'\n    }\n    const safeConfirmTime = getClaimExpiration(expiration, isPartyB ? 'b' : 'a').time\n    if (moment().isAfter(safeConfirmTime)) {\n      errors.initiation = 'Offer expired.'\n    }\n  }\n  return errors\n}\n\nfunction getClaimErrors (expiration, isPartyB) {\n  const errors = {}\n  const safeClaimTime = getClaimExpiration(expiration, isPartyB ? 'b' : 'a').time\n  if (moment().isAfter(safeClaimTime)) {\n    errors.claim = 'Offer expired. Wait for refund.'\n  }\n  return errors\n}\n\nfunction isInitiateValid (swap) {\n  let errors = [\n    getCurrencyInputErrors(swap.assets),\n    getWalletErrors(swap.wallets, swap.isPartyB),\n    getCounterPartyErrors(swap.assets, swap.counterParty),\n    getInitiationErrors(swap.transactions, swap.expiration, swap.isVerified, swap.isPartyB)\n  ]\n\n  const numErrors = errors.reduce((prev, next) => prev + Object.keys(next).length, 0)\n\n  return numErrors === 0\n}\n\nexport { getCurrencyInputErrors, getWalletErrors, getCounterPartyErrors, getInitiationErrors, getClaimErrors, isInitiateValid }\n","/* global alert */\n\nimport { replace } from 'connected-react-router'\nimport watch from 'redux-watch'\nimport { store } from '../store'\nimport config from '../config'\nimport { getClient } from '../services/chainClient'\nimport { actions as transactionActions } from './transactions'\nimport { actions as secretActions } from './secretparams'\nimport { actions as walletActions } from './wallets'\nimport cryptoassets from '@liquality/cryptoassets'\nimport { wallets as walletsConfig } from '../utils/wallets'\nimport { sleep } from '../utils/async'\nimport { getFundExpiration, getClaimExpiration, generateExpiration } from '../utils/expiration'\nimport { isInitiateValid } from '../utils/validation'\n\nconst types = {\n  SWITCH_SIDES: 'SWITCH_SIDES',\n  SET_STEP: 'SET_STEP',\n  SET_EXPIRATION: 'SET_EXPIRATION',\n  SET_LINK: 'SET_LINK',\n  SET_IS_VERIFIED: 'SET_IS_VERIFIED',\n  SET_SHOW_ERRORS: 'SET_SHOW_ERRORS',\n  SET_LOADING_MESSAGE: 'SET_LOADING_MESSAGE'\n}\n\nfunction switchSides () {\n  return { type: types.SWITCH_SIDES }\n}\n\nfunction setStep (step) {\n  return { type: types.SET_STEP, step }\n}\n\nfunction setExpiration (expiration) {\n  return { type: types.SET_EXPIRATION, expiration }\n}\n\nfunction setLink (link) {\n  return { type: types.SET_LINK, link }\n}\n\nfunction setIsVerified (isVerified) {\n  return { type: types.SET_IS_VERIFIED, isVerified }\n}\n\nfunction showErrors () {\n  return { type: types.SET_SHOW_ERRORS, showErrors: true }\n}\n\nfunction hideErrors () {\n  return { type: types.SET_SHOW_ERRORS, showErrors: false }\n}\n\nfunction setLoadingMessage (loadingMessage) {\n  return { type: types.SET_LOADING_MESSAGE, loadingMessage: loadingMessage }\n}\n\nfunction clearLoadingMessage () {\n  return { type: types.SET_LOADING_MESSAGE, loadingMessage: null }\n}\n\nasync function ensureWallet (party, dispatch, getState) {\n  const {\n    wallets,\n    assets\n  } = getState().swap\n  const client = getClient(assets[party].currency, wallets[party].type)\n  const walletSet = wallets[party].connected\n  const walletAvailable = await client.wallet.isWalletAvailable()\n  const w = watch(store.getState, `swap.wallets.${party}`)\n\n  return new Promise((resolve) => {\n    const resolveOnConnection = () => {\n      store.subscribe(w((wallet) => {\n        if (wallet.connected && !wallet.connectOpen) resolve()\n      }))\n    }\n    if (!walletSet) {\n      dispatch(walletActions.toggleWalletConnect(party))\n      resolveOnConnection()\n    } else if (!walletAvailable) {\n      dispatch(walletActions.disconnectWallet(party))\n      dispatch(walletActions.toggleWalletConnect(party))\n      resolveOnConnection()\n    } else {\n      resolve()\n    }\n  })\n}\n\nasync function generateSecret (dispatch, getState) {\n  const {\n    assets,\n    counterParty,\n    expiration\n  } = getState().swap\n  await ensureWallet('a', dispatch, getState)\n  const { wallets } = getState().swap\n  const client = getClient(assets.a.currency, wallets.a.type)\n  const secretData = [\n    assets.a.value,\n    assets.a.currency,\n    assets.b.value,\n    assets.b.currency,\n    wallets.a.addresses[0],\n    counterParty.a.address,\n    wallets.b.addresses[0],\n    counterParty.b.address,\n    expiration.unix()\n  ]\n\n  const secretMsg = secretData.join('')\n  await withLoadingMessage('a', dispatch, getState, async () => {\n    const secret = await client.swap.generateSecret(secretMsg)\n    dispatch(secretActions.setSecret(secret))\n  })\n}\n\nasync function ensureSecret (dispatch, getState) {\n  const {\n    secretParams,\n    isPartyB\n  } = getState().swap\n  if (!isPartyB && !secretParams.secret) {\n    await generateSecret(dispatch, getState)\n  }\n}\n\nasync function lockFunds (dispatch, getState) {\n  const {\n    assets,\n    wallets,\n    counterParty,\n    secretParams,\n    expiration,\n    isPartyB\n  } = getState().swap\n  const client = getClient(assets.a.currency, wallets.a.type)\n\n  const swapExpiration = isPartyB ? getFundExpiration(expiration, 'b').time : expiration\n\n  const block = await client.chain.getBlockHeight()\n  const valueInUnit = cryptoassets[assets.a.currency].currencyToUnit(assets.a.value)\n  const initiateSwapParams = [\n    valueInUnit,\n    counterParty.a.address,\n    wallets.a.addresses[0],\n    secretParams.secretHash,\n    swapExpiration.unix()\n  ]\n  if (config.debug) { // TODO: enable debugging universally on all CAL functions (chainClient.js)\n    console.log('Initiating Swap', initiateSwapParams)\n  }\n  const txHash = await client.swap.initiateSwap(...initiateSwapParams)\n  if (wallets.a.type === 'metamask') { // TODO: fix properly\n    alert('Please do not use the \"Speed up\" function to bump the priority of the transaction as this is not yet supported.')\n  }\n  dispatch(transactionActions.setTransaction('a', 'fund', { hash: txHash, block }))\n}\n\nasync function withLoadingMessage (party, dispatch, getState, func) {\n  const wallets = getState().swap.wallets\n  const wallet = walletsConfig[wallets[party].type]\n  dispatch(setLoadingMessage(`Confirm on ${wallet.name}`))\n  try {\n    await func(dispatch, getState)\n  } finally {\n    dispatch(clearLoadingMessage())\n  }\n}\n\nfunction initiateSwap () {\n  return async (dispatch, getState) => {\n    dispatch(showErrors())\n    dispatch(setExpiration(generateExpiration()))\n    await ensureWallet('a', dispatch, getState)\n    const initiateValid = isInitiateValid(getState().swap)\n    if (!initiateValid) return\n    await generateSecret(dispatch, getState)\n    await withLoadingMessage('a', dispatch, getState, async () => {\n      await lockFunds(dispatch, getState)\n    })\n    dispatch(setIsVerified(true))\n    dispatch(replace('/backupLink'))\n  }\n}\n\nfunction confirmSwap () {\n  return async (dispatch, getState) => {\n    dispatch(showErrors())\n    await ensureWallet('a', dispatch, getState)\n    const initiateValid = isInitiateValid(getState().swap)\n    if (!initiateValid) return\n    await withLoadingMessage('a', dispatch, getState, lockFunds)\n    dispatch(waitForSwapClaim())\n    dispatch(replace('/backupLink'))\n  }\n}\n\nasync function verifyInitiateSwapTransaction (dispatch, getState) {\n  const {\n    assets: { b: { currency, value } },\n    wallets: { b: { addresses, type } },\n    counterParty,\n    secretParams,\n    transactions,\n    expiration\n  } = getState().swap\n  const client = getClient(currency, type)\n  const valueInUnit = cryptoassets[currency].currencyToUnit(value)\n  while (true) {\n    try {\n      const swapVerified = await client.swap.verifyInitiateSwapTransaction(transactions.b.fund.hash, valueInUnit, addresses[0], counterParty.b.address, secretParams.secretHash, expiration.unix())\n      if (swapVerified) {\n        dispatch(setIsVerified(true))\n        break\n      }\n    } catch (e) {\n      console.error(e)\n    }\n    await sleep(5000)\n  }\n}\n\nasync function findInitiateSwapTransaction (dispatch, getState) {\n  const {\n    assets: { b: { currency, value } },\n    wallets: { b: { addresses, type } },\n    counterParty,\n    secretParams,\n    expiration\n  } = getState().swap\n  const client = getClient(currency, type)\n  const valueInUnit = cryptoassets[currency].currencyToUnit(value)\n  const swapExpiration = getFundExpiration(expiration, 'b').time\n  const initiateTransaction = await client.swap.findInitiateSwapTransaction(valueInUnit, addresses[0], counterParty.b.address, secretParams.secretHash, swapExpiration.unix())\n  dispatch(transactionActions.setTransaction('b', 'fund', initiateTransaction))\n}\n\nfunction waitForSwapConfirmation () {\n  return async (dispatch, getState) => {\n    dispatch(replace('/waiting'))\n    await findInitiateSwapTransaction(dispatch, getState)\n  }\n}\n\nfunction waitForSwapClaim () {\n  return async (dispatch, getState) => {\n    const {\n      assets,\n      wallets,\n      transactions,\n      counterParty,\n      secretParams,\n      expiration,\n      isPartyB\n    } = getState().swap\n    const client = getClient(assets.a.currency, wallets.a.type)\n    const swapExpiration = getFundExpiration(expiration, isPartyB ? 'b' : 'a').time\n    const claimTransaction = await client.swap.findClaimSwapTransaction(transactions.a.fund.hash, counterParty.a.address, wallets.a.addresses[0], secretParams.secretHash, swapExpiration.unix())\n    dispatch(transactionActions.setTransaction('b', 'claim', claimTransaction))\n  }\n}\n\nfunction waitForSwapRefund () {\n  return async (dispatch, getState) => {\n    const {\n      assets,\n      wallets,\n      transactions,\n      counterParty,\n      secretParams,\n      expiration,\n      isPartyB\n    } = getState().swap\n    const client = getClient(assets.a.currency, wallets.a.type)\n    const swapExpiration = getFundExpiration(expiration, isPartyB ? 'a' : 'b').time\n    const refundTransaction = await client.swap.findRefundSwapTransaction(transactions.a.fund.hash, counterParty.a.address, wallets.a.addresses[0], secretParams.secretHash, swapExpiration.unix())\n    dispatch(transactionActions.setTransaction('a', 'refund', refundTransaction))\n  }\n}\n\nasync function unlockFunds (dispatch, getState) {\n  const {\n    assets,\n    wallets,\n    counterParty,\n    transactions,\n    secretParams,\n    isPartyB,\n    expiration\n  } = getState().swap\n  const client = getClient(assets.b.currency, wallets.b.type)\n  const block = await client.chain.getBlockHeight()\n  const swapExpiration = getClaimExpiration(expiration, isPartyB ? 'b' : 'a').time\n  const claimSwapParams = [\n    transactions.b.fund.hash,\n    wallets.b.addresses[0],\n    counterParty.b.address,\n    secretParams.secret,\n    swapExpiration.unix()\n  ]\n  if (config.debug) { // TODO: enable debugging universally on all CAL functions (chainClient.js)\n    console.log('Claiming Swap', claimSwapParams)\n  }\n  const txHash = await client.swap.claimSwap(...claimSwapParams)\n  dispatch(transactionActions.setTransaction('a', 'claim', { hash: txHash, block }))\n}\n\nfunction redeemSwap () {\n  return async (dispatch, getState) => {\n    await ensureSecret(dispatch, getState)\n    await ensureWallet('b', dispatch, getState)\n    await withLoadingMessage('b', dispatch, getState, unlockFunds)\n  }\n}\n\nfunction refundSwap () {\n  return async (dispatch, getState) => {\n    await ensureWallet('a', dispatch, getState)\n\n    const {\n      assets,\n      wallets,\n      counterParty,\n      transactions,\n      secretParams,\n      isPartyB,\n      expiration\n    } = getState().swap\n\n    const client = getClient(assets.a.currency, wallets.a.type)\n    const swapExpiration = getFundExpiration(expiration, isPartyB ? 'b' : 'a').time\n    const block = await client.chain.getBlockHeight()\n    await withLoadingMessage('a', dispatch, getState, async () => {\n      const refundTxHash = await client.swap.refundSwap(\n        transactions.a.fund.hash,\n        counterParty.a.address,\n        wallets.a.addresses[0],\n        secretParams.secretHash,\n        swapExpiration.unix()\n      )\n      dispatch(transactionActions.setTransaction('a', 'refund', { hash: refundTxHash, block }))\n    })\n  }\n}\n\nconst actions = {\n  switchSides,\n  setStep,\n  setExpiration,\n  setLink,\n  setIsVerified,\n  showErrors,\n  hideErrors,\n  initiateSwap,\n  confirmSwap,\n  findInitiateSwapTransaction,\n  verifyInitiateSwapTransaction,\n  waitForSwapConfirmation,\n  waitForSwapClaim,\n  waitForSwapRefund,\n  redeemSwap,\n  refundSwap\n}\n\nexport { types, actions }\n","const types = {\n  SET_ASSET: 'SET_ASSET',\n  CHANGE_AMOUNT: 'CHANGE_AMOUNT',\n  CHANGE_RATE: 'CHANGE_RATE'\n}\n\nfunction setAsset (party, currency) {\n  return { type: types.SET_ASSET, party, currency }\n}\n\nfunction changeRate (newValue) {\n  return (dispatch, getState) => {\n    dispatch({ type: types.CHANGE_RATE, newValue })\n    const { assets } = getState().swap\n    const a = {type: 'a', value: assets.a.value || 0}\n    const rate = assets.rate || 0\n\n    let newVal = +(parseFloat(a.value) * parseFloat(rate)).toFixed(6)\n    dispatch({ type: types.CHANGE_AMOUNT, party: 'b', newValue: newVal.toString() })\n  }\n}\n\nfunction changeAmount (party, newValue) {\n  return (dispatch, getState) => {\n    dispatch({ type: types.CHANGE_AMOUNT, party, newValue })\n    const { assets } = getState().swap\n\n    const a = {type: 'a', value: assets.a.value || 0}\n    const b = {type: 'b', value: assets.b.value || 0}\n    const rate = assets.rate || 0\n\n    if (party === 'a') {\n      let newVal = +(parseFloat(a.value) * parseFloat(rate)).toFixed(6)\n      dispatch({ type: types.CHANGE_AMOUNT, party: 'b', newValue: newVal.toString() })\n    } else if (party === 'b') {\n      if (a.value === 0) {\n        let newVal = +(parseFloat(b.value) * parseFloat(rate.value)).toFixed(6)\n        dispatch({ type: types.CHANGE_AMOUNT, party: 'a', newValue: newVal.toString() })\n      } else {\n        let newRate = +(parseFloat(b.value) / parseFloat(a.value)).toFixed(6)\n        dispatch({ type: types.CHANGE_RATE, newValue: newRate.toString() })\n      }\n    }\n  }\n}\n\nconst actions = {\n  setAsset,\n  changeAmount,\n  changeRate\n}\n\nexport { types, actions }\n","/**\n * Generate a reducer function\n * @param {object} reducerMap Map of actionType -> actionHandler function\n * @param {object} initialState The initial state of the reducer\n * @param {Function} [fallbackFunction] An optional callback function to be called\n * when an actionHandler does not exist for this reducer\n */\nfunction getReducerFunction (reducerMap, initialState, fallbackFunction) {\n  return (state = initialState, action) => {\n    const reducer = reducerMap[action.type]\n    if (reducer) {\n      return reducer(state, action)\n    } else {\n      return fallbackFunction ? fallbackFunction(state, action) : state\n    }\n  }\n}\n\nexport { getReducerFunction }\n","import update from 'immutability-helper'\nimport { types as assetTypes } from '../actions/assets'\nimport { types as swapTypes } from '../actions/swap'\nimport { getReducerFunction } from './helpers'\n\nconst initialState = {\n  a: {\n    currency: 'eth',\n    value: ''\n  },\n  b: {\n    currency: 'btc',\n    value: ''\n  },\n  rate: ''\n}\n\nfunction switchSides (state, action) {\n  const newRate = +(parseFloat(state.b.value) / parseFloat(state.a.value)).toFixed(6)\n  return update(state, {\n    a: { $set: state.b },\n    b: { $set: state.a },\n    rate: { $set: newRate.toString() }\n  })\n}\n\nfunction setAsset (state, action) {\n  return update(state, {\n    [action.party]: {\n      currency: { $set: action.currency }\n    }\n  })\n}\n\nfunction changeAmount (state, action) {\n  return update(state, {\n    [action.party]: { value: { $set: action.newValue } }\n  })\n}\n\nfunction changeRate (state, action) {\n  return update(state, {\n    rate: { $set: action.newValue }\n  })\n}\n\nconst reducers = {\n  [swapTypes.SWITCH_SIDES]: switchSides,\n  [assetTypes.SET_ASSET]: setAsset,\n  [assetTypes.CHANGE_AMOUNT]: changeAmount,\n  [assetTypes.CHANGE_RATE]: changeRate\n}\n\nconst assets = getReducerFunction(reducers, initialState)\n\nexport default assets\n","import update from 'immutability-helper'\nimport { types as walletTypes } from '../actions/wallets'\nimport { types as swapTypes } from '../actions/swap'\nimport { getReducerFunction } from './helpers'\n\nconst initialState = {\n  a: {\n    addresses: [], // TODO: why multiple addresses?\n    balance: null,\n    connectOpen: false,\n    connected: false,\n    connecting: false,\n    chosen: false,\n    type: ''\n  },\n  b: {\n    addresses: [],\n    balance: null,\n    connectOpen: false,\n    connected: false,\n    connecting: false,\n    chosen: false,\n    type: ''\n  }\n}\n\nfunction switchSides (state, action) {\n  return update(state, {\n    a: { $set: state.b },\n    b: { $set: state.a }\n  })\n}\n\nfunction toggleWalletConnect (state, action) {\n  return update(state, {\n    [action.party]: {\n      connectOpen: { $set: !state[action.party].connectOpen }\n    }\n  })\n}\n\nfunction chooseWallet (state, action) {\n  return update(state, {\n    [action.party]: {\n      chosen: { $set: true },\n      type: { $set: action.wallet }\n    }\n  })\n}\n\nfunction startConnecting (state, action) {\n  return update(state, {\n    [action.party]: {\n      connecting: { $set: true }\n    }\n  })\n}\n\nfunction connectWallet (state, action) {\n  return update(state, {\n    [action.party]: {\n      addresses: { $set: action.addresses },\n      connected: { $set: true },\n      balance: { $set: action.balance }\n    }\n  })\n}\n\nfunction disconnectWallet (state, action) {\n  const cleanState = initialState[action.party]\n  if (action.preserveAddress) {\n    delete cleanState.addresses\n  }\n  return update(state, {\n    [action.party]: { $merge: cleanState }\n  })\n}\n\nconst reducers = {\n  [swapTypes.SWITCH_SIDES]: switchSides,\n  [walletTypes.TOGGLE_WALLET_CONNECT]: toggleWalletConnect,\n  [walletTypes.CHOOSE_WALLET]: chooseWallet,\n  [walletTypes.START_CONNECTING_WALLET]: startConnecting,\n  [walletTypes.CONNECT_WALLET]: connectWallet,\n  [walletTypes.DISCONNECT_WALLET]: disconnectWallet\n}\n\nconst wallets = getReducerFunction(reducers, initialState)\n\nexport default wallets\n","const types = {\n  CHANGE_COUNTER_PARTY_ADDRESS: 'CHANGE_COUNTER_PARTY_ADDRESS'\n}\n\nfunction changeCounterPartyAddress (party, newValue) {\n  return { type: types.CHANGE_COUNTER_PARTY_ADDRESS, party, newValue }\n}\n\nconst actions = {\n  changeCounterPartyAddress\n}\n\nexport { types, actions }\n","import update from 'immutability-helper'\nimport { types as counterPartyTypes } from '../actions/counterparty'\nimport { types as swapTypes } from '../actions/swap'\nimport { getReducerFunction } from './helpers'\n\nconst initialState = {\n  a: { address: '', valid: false },\n  b: { address: '', valid: false }\n}\n\nfunction switchSides (state) {\n  return update(state, {\n    a: { $set: state.b },\n    b: { $set: state.a }\n  })\n}\n\nfunction changeCounterPartyAddress (state, action) {\n  return update(state, {\n    [action.party]: { address: { $set: action.newValue }, valid: { $set: action.valid } }\n  })\n}\n\nconst reducers = {\n  [swapTypes.SWITCH_SIDES]: switchSides,\n  [counterPartyTypes.CHANGE_COUNTER_PARTY_ADDRESS]: changeCounterPartyAddress\n}\n\nconst counterParty = getReducerFunction(reducers, initialState)\n\nexport default counterParty\n","import update from 'immutability-helper'\nimport { types } from '../actions/transactions'\nimport { getReducerFunction } from './helpers'\n\nconst initialState = {\n  a: {\n    fund: {},\n    claim: {},\n    refund: {}\n  },\n  b: {\n    fund: {},\n    claim: {},\n    refund: {}\n  }\n}\n\nfunction setTransaction (state, action) {\n  return update(state, {\n    [action.party]: { [action.kind]: { $set: {confirmations: 0, ...action.tx} } }\n  })\n}\n\nconst reducers = {\n  [types.SET_TRANSACTION]: setTransaction\n}\n\nconst counterParty = getReducerFunction(reducers, initialState)\n\nexport default counterParty\n","import update from 'immutability-helper'\nimport { sha256 } from '@liquality/crypto'\nimport { types } from '../actions/secretparams'\nimport { getReducerFunction } from './helpers'\n\nconst initialState = {}\n\nfunction setSecret (state, action) {\n  return update(state, {\n    secret: { $set: action.secret },\n    secretHash: { $set: sha256(action.secret) }\n  })\n}\n\nfunction setSecretHash (state, action) {\n  return update(state, {\n    secretHash: { $set: action.secretHash }\n  })\n}\n\nconst reducers = {\n  [types.SET_SECRET]: setSecret,\n  [types.SET_SECRET_HASH]: setSecretHash\n}\n\nconst secretParams = getReducerFunction(reducers, initialState)\n\nexport default secretParams\n","const types = {\n  OPEN_ASSET_SELECTOR: 'OPEN_ASSET_SELECTOR',\n  CLOSE_ASSET_SELECTOR: 'CLOSE_ASSET_SELECTOR',\n  SET_ASSET_SELECTOR_SEARCH: 'SET_ASSET_SELECTOR_SEARCH'\n}\n\nfunction openAssetSelector (party) {\n  return { type: types.OPEN_ASSET_SELECTOR, party }\n}\n\nfunction closeAssetSelector () {\n  return { type: types.CLOSE_ASSET_SELECTOR }\n}\n\nfunction setAssetSelectorSearch (value) {\n  return { type: types.SET_ASSET_SELECTOR_SEARCH, value }\n}\n\nconst actions = {\n  openAssetSelector,\n  closeAssetSelector,\n  setAssetSelectorSearch\n}\n\nexport { types, actions }\n","import update from 'immutability-helper'\nimport { types } from '../actions/assetSelector'\nimport { getReducerFunction } from './helpers'\n\nconst initialState = {\n  open: false,\n  party: null,\n  search: ''\n}\n\nfunction openAssetSelector (state, action) {\n  return update(state, {\n    open: { $set: true },\n    party: { $set: action.party }\n  })\n}\n\nfunction closeAssetSelector (state, action) {\n  return update(state, { $set: initialState })\n}\n\nfunction setAssetSelectorSearch (state, action) {\n  return update(state, {\n    search: { $set: action.value }\n  })\n}\n\nconst reducers = {\n  [types.OPEN_ASSET_SELECTOR]: openAssetSelector,\n  [types.CLOSE_ASSET_SELECTOR]: closeAssetSelector,\n  [types.SET_ASSET_SELECTOR_SEARCH]: setAssetSelectorSearch\n}\n\nconst secretParams = getReducerFunction(reducers, initialState)\n\nexport default secretParams\n","import { combineReducers } from 'redux'\n\nimport { types } from '../actions/swap'\nimport { steps } from '../components/SwapProgressStepper/steps'\n\nimport assets from './assets'\nimport wallets from './wallets'\nimport counterParty from './counterparty'\nimport transactions from './transactions'\nimport secretParams from './secretparams'\nimport assetSelector from './assetSelector'\n\nexport default combineReducers({\n  assets,\n  wallets,\n  counterParty,\n  transactions,\n  secretParams,\n  assetSelector,\n  step: (state = steps.INITIATION, action) => {\n    return action.type === types.SET_STEP ? action.step : state\n  },\n  expiration: (state = null, action) => {\n    return action.type === types.SET_EXPIRATION ? action.expiration : state\n  },\n  link: (state = null, action) => {\n    return action.type === types.SET_LINK ? action.link : state\n  },\n  isVerified: (state = false, action) => {\n    return action.type === types.SET_IS_VERIFIED ? action.isVerified : state\n  },\n  showErrors: (state = false, action) => {\n    return action.type === types.SET_SHOW_ERRORS ? action.showErrors : state\n  },\n  loadingMessage: (state = null, action) => {\n    return action.type === types.SET_LOADING_MESSAGE ? action.loadingMessage : state\n  },\n  isPartyB: (state = false) => state\n})\n","import { combineReducers } from 'redux'\nimport { types } from '../actions/errors'\nimport swap from './swap'\n\nexport default combineReducers({\n  swap,\n  error: (state = null, action) => {\n    return action.type === types.SET_ERROR ? action.error : state\n  }\n})\n","import { createBrowserHistory } from 'history'\n\nconst history = createBrowserHistory({basename: window.location.pathname})\n\nexport default history\n","\nimport { createStore, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport { connectRouter, routerMiddleware } from 'connected-react-router'\nimport reducers from './reducers'\nimport { generateSwapState } from './utils/app-links'\nimport history from './history'\n\nconst initialAppState = {\n  swap: generateSwapState(window.location)\n}\n\nconst store = createStore(\n  connectRouter(history)(reducers),\n  initialAppState,\n  applyMiddleware(thunk, routerMiddleware(history))\n)\n\nexport { store, initialAppState }\n","import { NodeError, WalletError } from '@liquality/errors'\nimport { store } from './store'\nimport { actions as errorActions } from './actions/errors'\n\nfunction errorHandler (e) {\n  if (e instanceof WalletError ||\n      e instanceof NodeError) {\n    store.dispatch(errorActions.setError(e))\n  } else {\n    throw e\n  }\n}\n\nexport default errorHandler\n","function getIcon (code) {\n  try {\n    return require(`../../node_modules/cryptocurrency-icons/svg/color/${code.toLowerCase()}.svg`)\n  } catch (e) {\n    return require('../icons/blank-asset.svg')\n  }\n}\n\nexport { getIcon }\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport cryptoassets from '@liquality/cryptoassets'\nimport * as assetUtils from '../../utils/assets'\nimport AssetsBG from './assets-bg.svg'\nimport './SwapPairPanel.css'\n\nclass SwapPairPanel extends Component {\n  render () {\n    const haveCurrency = cryptoassets[this.props.haveCurrency]\n    const wantCurrency = cryptoassets[this.props.wantCurrency]\n    const showHave = (!this.props.focusSide || this.props.focusSide === 'have')\n    const showWant = (!this.props.focusSide || this.props.focusSide === 'want')\n    return <div className='SwapPairPanel'>\n      <div className='SwapPairPanel_assetContainer'>\n        {showHave && <img\n          src={assetUtils.getIcon(haveCurrency.code)}\n          className={classNames(\n            'SwapPairPanel_asset',\n            'SwapPairPanel_asset_left',\n            {'SwapPairPanel_asset_interactive': this.props.onHaveClick}\n          )}\n          alt={haveCurrency.code}\n          onClick={this.props.onHaveClick} />}\n        {showWant && <img\n          src={assetUtils.getIcon(wantCurrency.code)}\n          className={classNames(\n            'SwapPairPanel_asset',\n            'SwapPairPanel_asset_right',\n            {'SwapPairPanel_asset_interactive': this.props.onHaveClick}\n          )}\n          alt={wantCurrency.code}\n          onClick={this.props.onWantClick} />}\n        <img src={AssetsBG} className='SwapPairPanel_assetsBG' alt='' />\n        {this.props.icon && <img src={this.props.icon} className='SwapPairPanel_icon' onClick={(e) => this.props.onIconClick(e)} alt='' />}\n      </div>\n      <div className='SwapPairPanel_labels'>\n        <h1 className={classNames(\n          'SwapPairPanel_labels_have',\n          {'SwapPairPanel_labels_have_faded': !showHave}\n        )}>{this.props.haveLabel}</h1>\n        <h1 className={classNames(\n          'SwapPairPanel_labels_want',\n          {'SwapPairPanel_labels_want_faded': !showWant}\n        )}>{this.props.wantLabel}</h1>\n      </div>\n      { this.props.showCurrencyLabels && <div className='SwapPairPanel_currency_labels'>\n        {showHave &&\n          <h4\n            className={classNames('SwapPairPanel_currency_labels_have', {'SwapPairPanel_currency_labels_interactive': this.props.onHaveClick})}\n            onClick={this.props.onHaveClick} >\n            {haveCurrency.name} ({haveCurrency.code})\n          </h4>}\n        {showWant &&\n          <h4\n            className={classNames('SwapPairPanel_currency_labels_want', {'SwapPairPanel_currency_labels_interactive': this.props.onWantClick})}\n            onClick={this.props.onWantClick}>\n            {wantCurrency.name} ({wantCurrency.code})\n          </h4>}\n      </div> }\n    </div>\n  }\n}\n\nSwapPairPanel.propTypes = {\n  haveCurrency: PropTypes.string.isRequired,\n  haveLabel: PropTypes.string.isRequired,\n  onHaveClick: PropTypes.func,\n  wantCurrency: PropTypes.string.isRequired,\n  wantLabel: PropTypes.string.isRequired,\n  onWantClick: PropTypes.func,\n  icon: PropTypes.any,\n  onIconClick: PropTypes.func,\n  showCurrencyLabels: PropTypes.bool,\n  focusSide: PropTypes.oneOf(['have', 'want'])\n}\n\nSwapPairPanel.defaultProps = {\n  haveLabel: 'Have',\n  wantLabel: 'Want'\n}\n\nexport default SwapPairPanel\n","import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport cryptoassets from '@liquality/cryptoassets'\nimport * as assetUtils from '../../utils/assets'\nimport config from '../../config'\n\nimport closeIcon from '../../icons/close.svg'\nimport './AssetSelector.css'\n\nclass AssetSelector extends Component {\n  render () {\n    const configuredAssets = Object.keys(config.assets)\n    const displayedAssets = Object.entries(cryptoassets)\n      .filter(([id]) => configuredAssets.includes(id))\n      .filter(([id]) => id !== this.props.excludeAsset)\n      .filter(([, currency]) =>\n        currency.code.toLowerCase().includes(this.props.search.toLowerCase()) ||\n        currency.name.toLowerCase().includes(this.props.search.toLowerCase())\n      )\n\n    return <div className='AssetSelector'>\n      <div className='AssetSelector_search'>\n        <input type='text'\n          value={this.props.search}\n          placeholder='Search by Asset Name or Symbol'\n          onChange={e => this.props.onSearchChange(e.target.value)} />\n        <button className='AssetSelector_close' onClick={() => this.props.onClose()}><img src={closeIcon} alt='Close asset selector' /></button>\n      </div>\n      <ul className='AssetSelector_list'>\n        {displayedAssets.map(\n          ([id, currency]) =>\n            <li className='AssetSelector_asset' key={id} onClick={() => this.props.onSelectAsset(id)}>\n              <img className='AssetSelector_asset_icon' src={assetUtils.getIcon(currency.code)} alt={currency.name} />\n              <h4 className='AssetSelector_asset_name'>{currency.name} ({currency.code})</h4>\n            </li>\n        )}\n      </ul>\n    </div>\n  }\n}\n\nAssetSelector.propTypes = {\n  search: PropTypes.string,\n  excludeAsset: PropTypes.oneOf(Object.keys(cryptoassets)),\n  onSearchChange: PropTypes.func.isRequired,\n  onSelectAsset: PropTypes.func.isRequired,\n  onClose: PropTypes.func.isRequired\n}\n\nAssetSelector.defaultProps = {\n  search: ''\n}\n\nexport default AssetSelector\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport Spinner from './spinner.svg'\nimport './Button.css'\n\nclass Button extends Component {\n  render () {\n    const classes = ['Button', 'btn']\n\n    if (this.props.className) {\n      classes.push(this.props.className)\n    }\n\n    if (this.props.primary) {\n      classes.push('btn-primary')\n    } else if (this.props.secondary) {\n      classes.push('btn-secondary')\n    } else if (this.props.link) {\n      classes.push('btn-link')\n    }\n\n    if (this.props.wide) {\n      classes.push('Button_wide')\n    }\n    if (this.props.small) {\n      classes.push('Button_small')\n    }\n\n    const showLoader = this.props.loadingMessage\n    const disabled = this.props.disabled || this.props.loadingMessage\n\n    return <button tabIndex={this.props.tabIndex} className={classes.join(' ')} disabled={disabled} onClick={e => this.props.onClick(e)}>\n      {this.props.icon && <span className='Button_icon'><img src={this.props.icon} alt='' /></span>}\n      { showLoader &&\n        <img className='Button_spinner' src={Spinner} alt='Loading...' />\n      }\n      { showLoader ? this.props.loadingMessage : this.props.children }\n    </button>\n  }\n}\n\nButton.propTypes = {\n  className: PropTypes.string,\n  primary: PropTypes.bool,\n  secondary: PropTypes.bool,\n  link: PropTypes.bool,\n  wide: PropTypes.bool,\n  small: PropTypes.bool,\n  disabled: PropTypes.bool,\n  icon: PropTypes.any,\n  onClick: PropTypes.func,\n  loadingMessage: PropTypes.string,\n  tabIndex: PropTypes.number\n}\n\nButton.defaultProps = {\n  tabIndex: -1\n}\n\nexport default Button\n","import React, { Component } from 'react'\nimport SwapPairPanel from '../../components/SwapPairPanel/SwapPairPanel'\nimport AssetSelector from '../../components/AssetSelector/AssetSelector'\nimport Button from '../../components/Button/Button'\nimport SwapIcon from '../../icons/switch.svg'\n\nimport './AssetSelection.css'\n\nclass AssetSelection extends Component {\n  handleSelectAsset (asset) {\n    this.props.setAsset(this.props.assetSelector.party, asset)\n    this.props.closeAssetSelector()\n  }\n\n  handlePairPanelAssetClick (party) {\n    if (this.props.assetSelector.open) {\n      this.props.closeAssetSelector(party)\n    } else {\n      this.props.openAssetSelector(party)\n    }\n  }\n\n  render () {\n    const { a: assetA, b: assetB } = this.props.assets\n    return <div className='AssetSelection'>\n      <SwapPairPanel\n        haveCurrency={assetA.currency}\n        wantCurrency={assetB.currency}\n        showCurrencyLabels\n        focusSide={this.props.assetSelector.party && (this.props.assetSelector.party === 'a' ? 'have' : 'want')}\n        onHaveClick={() => this.handlePairPanelAssetClick('a')}\n        onWantClick={() => this.handlePairPanelAssetClick('b')}\n        icon={!this.props.assetSelector.open && SwapIcon}\n        onIconClick={() => this.props.switchSides()} />\n      <div className='AssetSelection_wrapper'>\n        { this.props.assetSelector.open &&\n          <AssetSelector\n            search={this.props.assetSelector.search}\n            excludeAsset={this.props.assetSelector.party === 'a' ? assetA.currency : assetB.currency}\n            onSelectAsset={asset => this.handleSelectAsset(asset)}\n            onSearchChange={value => this.props.setAssetSelectorSearch(value)}\n            onClose={() => this.props.closeAssetSelector()} /> }\n        { !this.props.assetSelector.open && <div className='AssetSelection_bottom'>\n          <Button wide primary onClick={() => this.props.history.replace('/walletB')}>Next</Button>\n        </div> }\n      </div>\n    </div>\n  }\n}\n\nexport default AssetSelection\n","import { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { actions as assetSelectorActions } from '../../actions/assetSelector'\nimport { actions as assetActions } from '../../actions/assets'\nimport { actions as swapActions } from '../../actions/swap'\nimport AssetSelection from './AssetSelection'\n\nconst mapStateToProps = state => {\n  return {\n    assets: state.swap.assets,\n    assetSelector: state.swap.assetSelector\n  }\n}\n\nexport default withRouter(connect(\n  mapStateToProps,\n  {\n    switchSides: swapActions.switchSides,\n    openAssetSelector: assetSelectorActions.openAssetSelector,\n    closeAssetSelector: assetSelectorActions.closeAssetSelector,\n    setAssetSelectorSearch: assetSelectorActions.setAssetSelectorSearch,\n    setAsset: assetActions.setAsset\n  }\n)(AssetSelection))\n","import React from 'react'\n\nfunction withCopyButton (WrappedComponent) {\n  return class extends React.Component {\n    handleCopyClick () {\n      const tempInput = document.createElement('input')\n      tempInput.value = this.props.link\n      tempInput.style = 'position: absolute; top: -2000px;'\n      document.body.appendChild(tempInput)\n      tempInput.select()\n      document.execCommand('copy')\n      document.body.removeChild(tempInput)\n    }\n\n    render () {\n      return <WrappedComponent onCopyClick={() => this.handleCopyClick()} {...this.props} />\n    }\n  }\n}\n\nexport default withCopyButton\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport moment from 'moment'\nimport cryptoassets from '@liquality/cryptoassets'\nimport { getFundExpiration, getClaimExpiration } from '../../utils/expiration'\nimport withCopyButton from '../withCopyButton'\nimport ClockIcon from '../../icons/clock.svg'\nimport CopyIcon from '../../icons/copy.svg'\nimport './ExpirationDetails.css'\n\nclass ExpirationDetails extends Component {\n  constructor (props) {\n    super(props)\n    this.state = this.getExpirationState()\n  }\n\n  getTransaction () {\n    const transactions = this.props.transactions\n    const displayOrder = [\n      transactions.b.claim,\n      transactions.a.claim\n    ]\n\n    if (this.props.isPartyB) {\n      displayOrder.push(transactions.a.fund, transactions.b.fund)\n    } else {\n      displayOrder.push(transactions.b.fund, transactions.a.fund)\n    }\n\n    return displayOrder.find(tx => tx.hash) || {}\n  }\n\n  getExpirationState () {\n    const party = this.props.isPartyB ? 'b' : 'a'\n    const expiration = this.props.isClaim ? getClaimExpiration(this.props.expiration, party) : getFundExpiration(this.props.expiration, party)\n    return {\n      start: expiration.start,\n      duration: expiration.duration,\n      expiration: expiration.time,\n      now: moment(),\n      transaction: this.getTransaction()\n    }\n  }\n\n  componentDidMount () {\n    this.interval = setInterval(this.tick.bind(this), 1000)\n  }\n\n  componentWillUnmount () {\n    clearInterval(this.interval)\n  }\n\n  tick () {\n    this.setState(this.getExpirationState())\n  }\n\n  render () {\n    const maxNow = this.state.now.isAfter(this.state.expiration) ? this.state.expiration : this.state.now\n    const left = moment.duration(this.state.expiration.diff(maxNow))\n    const passed = moment.duration(maxNow.diff(this.state.start))\n    const total = this.state.duration\n\n    const filled = (((total.asSeconds() - left.asSeconds()) / total.asSeconds()) * 100).toFixed(2)\n\n    return <div className='ExpirationDetails'>\n      <img src={ClockIcon} className='ExpirationDetails_clock' alt='Clock Icon' />\n      <div className='ExpirationDetails_passed'>{moment.utc(passed.asMilliseconds()).format('HH:mm')}hr</div>\n      <div className='ExpirationDetails_center'>\n        <div className='ExpirationDetails_top'>\n          <div className='ExpirationDetails_terms'>\n            <em>Get {this.props.assets.b.value} {cryptoassets[this.props.assets.b.currency].code}\n            &nbsp;for {this.props.assets.a.value} {cryptoassets[this.props.assets.a.currency].code}</em>\n            &nbsp;Active for {moment.utc(left.asMilliseconds()).format('HH:mm')}hr {this.state.expiration.format('L LT')}\n          </div>\n          <div className='ExpirationDetails_link'>\n            <a href='#copy' onClick={() => this.props.onCopyClick()}>Swap link<img src={CopyIcon} alt='Copy' /></a>\n          </div>\n        </div>\n        <div className='ExpirationDetails_progress'>\n          <div className='ExpirationDetails_progress_fill' style={{width: `${filled}%`}} />\n        </div>\n        <div className='ExpirationDetails_bottom'>\n          <div className='ExpirationDetails_transaction'>\n            <strong>Transaction ID: </strong> {this.state.transaction.hash}\n          </div>\n          <div className='ExpirationDetails_confirmations'>\n            Confirmations: {this.state.transaction.confirmations}\n          </div>\n        </div>\n      </div>\n      <div className='ExpirationDetails_left'>{moment.utc(left.asMilliseconds()).format('HH:mm')}hr</div>\n    </div>\n  }\n}\n\nExpirationDetails.propTypes = {\n  isClaim: PropTypes.bool\n}\n\nexport default withCopyButton(ExpirationDetails)\n","import { connect } from 'react-redux'\nimport ExpirationDetails from './ExpirationDetails'\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    expiration: state.swap.expiration,\n    isPartyB: state.swap.isPartyB,\n    assets: state.swap.assets,\n    transactions: state.swap.transactions,\n    link: state.swap.link,\n    step: state.swap.step,\n    ...ownProps\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n  }\n)(ExpirationDetails)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport cryptoassets from '@liquality/cryptoassets'\nimport * as assetUtils from '../../utils/assets'\nimport './AddressInput.css'\nimport TickIcon from './tick.svg'\nimport ErrorIcon from './error.svg'\n\nconst AddressInput = (props) => {\n  const currency = cryptoassets[props.currency]\n  const valid = currency.isValidAddress(props.value)\n  const formattedAddress = props.value && currency.formatAddress(props.value)\n  return <div className={classNames('AddressInput', { error: props.error })}>\n    <div className='AddressInput_wrapper'>\n      <div className='AddressInput_box'>\n        <img className='AddressInput_icon' src={assetUtils.getIcon(currency.code)} alt={currency.name} />\n        <input className='AddressInput_input'\n          tabIndex={props.tabIndex}\n          value={formattedAddress}\n          onChange={e => props.onChange(e.target.value)}\n        />\n      </div>\n      { valid && <img className='AddressInput_status' src={TickIcon} alt='Valid' /> }\n      { props.error && <img className='AddressInput_status' src={ErrorIcon} alt='Invalid' />}\n    </div>\n    <div className='AddressInput_errorMessage'>{props.error && props.error}</div>\n  </div>\n}\n\nAddressInput.propTypes = {\n  // TODO: probably need some sort of repository for currency codes and icons?\n  currency: PropTypes.oneOf(Object.keys(cryptoassets)).isRequired,\n  value: PropTypes.string,\n  onChange: PropTypes.func,\n  tabIndex: PropTypes.number,\n  error: PropTypes.string\n}\n\nAddressInput.defaultProps = {\n  tabIndex: -1\n}\n\nexport default AddressInput\n","import React, { Component } from 'react'\nimport AddressInput from '../../components/AddressInput/AddressInput'\nimport { getCounterPartyErrors } from '../../utils/validation'\n\nimport './CounterPartyWallets.css'\n\nclass CounterPartyWallets extends Component {\n  render () {\n    const { a: assetA, b: assetB } = this.props.assets\n    const counterParty = this.props.counterParty\n    const errors = this.props.showErrors ? getCounterPartyErrors(this.props.assets, this.props.counterParty) : {}\n\n    return <div className='CounterPartyWallets'>\n      <div className='row'>\n        <div className='col'>\n          <h5 className='CounterPartyWallets_heading'>Send To</h5>\n          <AddressInput currency={assetA.currency}\n            value={counterParty.a.address}\n            error={errors.counterPartyA}\n            onChange={newValue => this.props.onCounterPartyAddressChange('a', newValue)}\n            tabIndex={5}\n          />\n        </div>\n        <div className='col'>\n          <h5 className='CounterPartyWallets_heading'>Receive From</h5>\n          <AddressInput currency={assetB.currency}\n            value={counterParty.b.address}\n            error={errors.counterPartyB}\n            onChange={newValue => this.props.onCounterPartyAddressChange('b', newValue)}\n            tabIndex={4}\n          />\n        </div>\n      </div>\n    </div>\n  }\n}\n\nexport default CounterPartyWallets\n","import { connect } from 'react-redux'\nimport { actions } from '../../actions/counterparty'\nimport CounterPartyWallets from './CounterPartyWallets'\n\nconst mapStateToProps = state => {\n  return {\n    assets: state.swap.assets,\n    counterParty: state.swap.counterParty,\n    showErrors: state.swap.showErrors\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    onCounterPartyAddressChange: actions.changeCounterPartyAddress\n  }\n)(CounterPartyWallets)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport cryptoassets from '@liquality/cryptoassets'\nimport './CurrencyInput.css'\n\nconst CurrencyInput = (props) => {\n  return <div className='CurrencyInput'>\n    <h3 className='CurrencyInput_heading'>{cryptoassets[props.currency].code}</h3>\n    <div className='CurrencyInput_inputWrapper'>\n      <input type='number' readOnly={props.disabled} value={props.value}\n        className={classNames('CurrencyInput_input', { 'error': props.error })} placeholder='0.00'\n        onChange={e => props.onChange(e.target.value)} tabIndex={props.tabIndex} />\n    </div>\n    <div className='CurrencyInput_errorMessage'>{ props.error && props.error }</div>\n  </div>\n}\n\nCurrencyInput.propTypes = {\n  // TODO: probably need some sort of repository for currency codes and icons?\n  currency: PropTypes.oneOf(Object.keys(cryptoassets)).isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  disabled: PropTypes.bool,\n  onChange: PropTypes.func,\n  tabIndex: PropTypes.number,\n  error: PropTypes.string\n}\n\nCurrencyInput.defaultProps = {\n  tabIndex: -1\n}\n\nexport default CurrencyInput\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\n\nimport cryptoassets from '@liquality/cryptoassets'\nimport './Rate.css'\n\nconst Rate = (props) => (\n  <div className={classNames('Rate', { error: props.error })}>\n    <div className='Rate_circle'>\n      <h5 className='Rate_heading'>Rate</h5>\n      <h5 className='Rate_stable'><strong>1 {cryptoassets[props.currencyA].code}</strong></h5>\n      <h4 className='Rate_equal'>=</h4>\n      <h6>\n        <input tabIndex={props.tabIndex} type='number' readOnly={props.disabled} value={props.value} className='Rate_input' placeholder='0.0000' onChange={e => props.onChange(e.target.value)} />\n        {cryptoassets[props.currencyB].code}\n      </h6>\n    </div>\n    <div className='Rate_errorMessage'>{ props.error && props.error }</div>\n  </div>\n)\n\nRate.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  disabled: PropTypes.bool,\n  onChange: PropTypes.func,\n  tabIndex: PropTypes.number,\n  error: PropTypes.string\n}\n\nRate.defaultProps = {\n  value: 0,\n  tabIndex: -1\n}\n\nexport default Rate\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { getCurrencyInputErrors } from '../../utils/validation'\nimport CurrencyInput from '../../components/CurrencyInput/CurrencyInput'\nimport Rate from '../../components/Rate/Rate'\nimport './CurrencyInputs.css'\n\nclass CurrencyInputs extends Component {\n  render () {\n    const { a: assetA, b: assetB, rate: assetRate } = this.props.assets\n    const errors = this.props.showErrors ? getCurrencyInputErrors(this.props.assets) : {}\n    return <div className='CurrencyInputs'>\n      <div className='row justify-content-between no-gutters'>\n        <div className='col CurrencyInputs_left'>\n          <CurrencyInput\n            currency={assetA.currency}\n            value={assetA.value}\n            disabled={this.props.disabled}\n            error={errors.assetA}\n            onChange={newValue => this.props.onAmountChange('a', newValue)}\n            tabIndex={1} />\n        </div>\n        <div className='col CurrencyInputs_right'>\n          <CurrencyInput\n            currency={assetB.currency}\n            value={assetB.value}\n            disabled={this.props.disabled}\n            error={errors.assetB}\n            onChange={newValue => this.props.onAmountChange('b', newValue)}\n            tabIndex={3} />\n        </div>\n        { this.props.showRate &&\n          <div className='CurrencyInputs_centre'>\n            <Rate\n              currencyA={assetA.currency}\n              currencyB={assetB.currency}\n              value={assetRate}\n              disabled={this.props.disabled}\n              error={errors.rate}\n              onChange={newValueA => this.props.onRateChange(newValueA)}\n              tabIndex={2}\n            />\n          </div>\n        }\n      </div>\n    </div>\n  }\n}\n\nCurrencyInputs.propTypes = {\n  disabled: PropTypes.bool,\n  showRate: PropTypes.bool\n}\n\nexport default CurrencyInputs\n","import { connect } from 'react-redux'\nimport { actions as swapActions } from '../../actions/swap'\nimport { actions as assetActions } from '../../actions/assets'\nimport CurrencyInputs from './CurrencyInputs'\n\nconst mapStateToProps = (state, ownProps) => {\n  return {\n    assets: state.swap.assets,\n    disabled: ownProps.disabled,\n    showErrors: state.swap.showErrors\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    onSwitchSides: swapActions.switchSides,\n    onAmountChange: assetActions.changeAmount,\n    onRateChange: assetActions.changeRate\n  }\n)(CurrencyInputs)\n","import React, { Component } from 'react'\nimport { generateExpiration, expirationDurations } from '../../utils/expiration'\n\nimport LockIcon from '../../icons/lock.svg'\nimport ClockIcon from '../../icons/clock.svg'\nimport './InitiatorExpirationInfo.css'\n\nclass InitiatorExpirationInfo extends Component {\n  constructor (props) {\n    super(props)\n    this.state = {\n      expiration: generateExpiration()\n    }\n  }\n\n  componentDidMount () {\n    this.interval = setInterval(() => {\n      this.setState({\n        expiration: generateExpiration()\n      })\n    }, 5000)\n  }\n\n  componentWillUnmount () {\n    clearInterval(this.interval)\n  }\n\n  render () {\n    return <div className='InitiatorExpirationInfo'>\n      <div className='row justify-content-center'>\n        <div><img src={LockIcon} className='InitiatorExpirationInfo_icon' alt='Lock Icon' />Funds Locked {expirationDurations.a.asHours().toFixed(2)} HRS</div>\n        <div><img src={ClockIcon} className='InitiatorExpirationInfo_icon' alt='Clock Icon' />Offer Active {expirationDurations.b.asHours().toFixed(2)} HRS</div>\n        <div><strong>~ {this.state.expiration.format('L LT')}</strong></div>\n      </div>\n    </div>\n  }\n}\n\nexport default InitiatorExpirationInfo\n","import { connect } from 'react-redux'\nimport { actions } from '../../actions/swap'\nimport InitiatorExpirationInfo from './InitiatorExpirationInfo'\n\nconst mapStateToProps = state => {\n  return {\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    refundSwap: actions.refundSwap\n  }\n)(InitiatorExpirationInfo)\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport classNames from 'classnames'\nimport Button from '../Button/Button'\n\nimport cryptoassets from '@liquality/cryptoassets'\nimport { wallets } from '../../utils/wallets'\nimport WalletIcon from './wallet-icon.svg'\n\nimport './WalletDisplay.css'\n\nconst WalletDisplay = (props) => {\n  const currency = cryptoassets[props.currency]\n  const address = props.address && currency.formatAddress(props.address)\n  return <div className={classNames('WalletDisplay', {error: props.error})}>\n    <div className='WalletDisplay_wrapper'>\n      <img className='WalletDisplay_icon'\n        src={wallets[props.type] ? wallets[props.type].icon : WalletIcon}\n        alt={wallets[props.type] ? wallets[props.type].name : 'Wallet'} />\n      <p className='WalletDisplay_address'>{address}</p>\n      { props.connected\n        ? <Button tabIndex={-1} small secondary onClick={e => props.onButtonClick(e)}>Change wallet</Button>\n        : <Button tabIndex={-1} small primary onClick={e => props.onButtonClick(e)}>Connect wallet</Button>\n      }\n      { props.balance &&\n        <div>\n          <p>Spendable</p>\n          <p className='WalletDisplay_balance'>{props.balance} {currency.code}</p>\n        </div>\n      }\n    </div>\n    {props.error && <div className='WalletDisplay_errorMessage'>{props.error}</div>}\n  </div>\n}\n\nWalletDisplay.propTypes = PropTypes.shape({\n  balance: PropTypes.string.isRequired,\n  currency: PropTypes.string.isRequired,\n  type: PropTypes.string.isRequired,\n  connected: PropTypes.bool.isRequired,\n  address: PropTypes.string,\n  onButtonClick: PropTypes.func.isRequired,\n  error: PropTypes.string\n}).isRequired\n\nexport default WalletDisplay\n","import React, { Component } from 'react'\nimport WalletDisplay from '../../components/WalletDisplay/WalletDisplay'\nimport { getWalletErrors } from '../../utils/validation'\n\nimport './WalletPanel.css'\n\nclass WalletPanel extends Component {\n  render () {\n    const { a: assetA, b: assetB } = this.props.assets\n    const { a: walletA, b: walletB } = this.props.wallets\n    const errors = this.props.showErrors ? getWalletErrors(this.props.wallets, this.props.isPartyB) : {}\n\n    return <div className='WalletPanel'>\n      <div className='row justify-content-between no-gutters'>\n        <div className='col WalletPanel_left'>\n          <WalletDisplay\n            currency={assetA.currency}\n            type={walletA.type}\n            balance={walletA.balance}\n            address={walletA.addresses[0]}\n            connected={walletA.connected}\n            error={errors.walletA}\n            onButtonClick={() => this.props.onToggleWalletConnect('a')} />\n        </div>\n        <div className='col WalletPanel_right'>\n          <WalletDisplay\n            currency={assetB.currency}\n            type={walletB.type}\n            balance={walletB.balance}\n            address={walletB.addresses[0]}\n            connected={walletB.connected}\n            error={errors.walletB}\n            onButtonClick={() => this.props.onToggleWalletConnect('b')} />\n        </div>\n      </div>\n    </div>\n  }\n}\n\nexport default WalletPanel\n","import { connect } from 'react-redux'\nimport { actions } from '../../actions/wallets'\nimport WalletPanel from './WalletPanel'\n\nconst mapStateToProps = state => {\n  return {\n    assets: state.swap.assets,\n    wallets: state.swap.wallets,\n    isPartyB: state.swap.isPartyB,\n    showErrors: state.swap.showErrors\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    onToggleWalletConnect: actions.toggleWalletConnect\n  }\n)(WalletPanel)\n","import React, { Component } from 'react'\n\nimport Button from '../../components/Button/Button'\nimport ExpirationDetails from '../../components/ExpirationDetails'\nimport SwapPairPanel from '../../components/SwapPairPanel/SwapPairPanel'\nimport HandshakeIcon from '../../icons/handshake.png'\nimport SwapIcon from '../../icons/switch.svg'\nimport CounterPartyWallets from '../CounterPartyWallets'\nimport CurrencyInputs from '../CurrencyInputs'\nimport InitiatorExpirationInfo from '../InitiatorExpirationInfo'\nimport WalletPanel from '../WalletPanel'\nimport './SwapInitiation.css'\nimport { getInitiationErrors } from '../../utils/validation'\nimport { APP_BASE_URL } from '../../utils/app-links'\n\nclass SwapInitiation extends Component {\n  render () {\n    const errors = getInitiationErrors(this.props.transactions, this.props.expiration, this.props.isVerified, this.props.isPartyB)\n\n    return <div className='SwapInitiation'>\n      <SwapPairPanel\n        haveCurrency={this.props.assets.a.currency}\n        wantCurrency={this.props.assets.b.currency}\n        icon={this.props.isPartyB ? undefined : SwapIcon}\n        onIconClick={() => this.props.switchSides()} />\n      <div className='SwapInitiation_top'>\n        <CurrencyInputs disabled={this.props.isPartyB} showRate />\n      </div>\n      <WalletPanel />\n      <div className='SwapInitiation_bottom'>\n        { this.props.isPartyB\n          ? <span className='SwapInitiation_handshake'><img src={HandshakeIcon} alt='Agree' /></span>\n          : <h5 className='SwapInitiation_counterPartyLabel'>Counter party wallets</h5> }\n        { this.props.isPartyB || <CounterPartyWallets /> }\n        { this.props.isPartyB\n          ? <ExpirationDetails />\n          : <InitiatorExpirationInfo /> }\n        {!errors.initiation && !this.props.isPartyB && <Button wide primary loadingMessage={this.props.loadingMessage} onClick={this.props.initiateSwap}>Initiate Swap</Button>}\n        {!errors.initiation && this.props.isPartyB && <Button wide primary loadingMessage={this.props.loadingMessage} onClick={this.props.confirmSwap}>Confirm Terms</Button>}\n        {errors.initiation && <Button primary disabled>{ errors.initiation }</Button>}<br />\n        {/* TODO: Do actual resetting of app state instead of refresh. */}\n        <Button wide link onClick={() => window.location.replace(APP_BASE_URL)}>{ this.props.isPartyB ? 'Abandon Swap' : 'Cancel' }</Button>\n      </div>\n    </div>\n  }\n}\n\nexport default SwapInitiation\n","import { connect } from 'react-redux'\nimport { actions } from '../../actions/swap'\nimport { actions as walletActions } from '../../actions/wallets'\n\nimport SwapInitiation from './SwapInitiation'\n\nconst mapStateToProps = state => {\n  return {\n    expiration: state.swap.expiration,\n    isPartyB: state.swap.isPartyB,\n    wallets: state.swap.wallets,\n    assets: state.swap.assets,\n    counterParty: state.swap.counterParty,\n    transactions: state.swap.transactions,\n    isVerified: state.swap.isVerified,\n    loadingMessage: state.swap.loadingMessage\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    initiateSwap: actions.initiateSwap,\n    confirmSwap: actions.confirmSwap,\n    switchSides: actions.switchSides,\n    toggleWalletConnect: walletActions.toggleWalletConnect\n  }\n)(SwapInitiation)\n","import React, { Component } from 'react'\nimport './BrandCard.css'\n\nclass BrandCard extends Component {\n  render () {\n    return <div className={'BrandCard ' + this.props.className}>\n      <h1 className='BrandCard_title'>{this.props.title}</h1>\n      {this.props.children}\n    </div>\n  }\n}\n\nexport default BrandCard\n","import React, { Component } from 'react'\nimport BrandCard from '../BrandCard/BrandCard'\nimport Button from '../Button/Button'\nimport withCopyButton from '../withCopyButton'\nimport CompletedIcon from '../../icons/completed.svg'\nimport CopyIcon from '../../icons/copy.svg'\nimport './CounterPartyLinkCard.css'\n\nclass CounterPartyLinkCard extends Component {\n  render () {\n    return <BrandCard className='CounterPartyLinkCard' title='Swap Initiated'>\n      <img className='CounterPartyLinkCard_icon' src={CompletedIcon} alt='Completed' />\n      <p className='CounterPartyLinkCard_description'>To continue, share this link with your counterparty</p>\n      <p><Button wide secondary onClick={this.props.onCopyClick} icon={CopyIcon}>Counterparty Link</Button></p>\n      <p><Button wide primary onClick={this.props.onNextClick}>Link Sent</Button></p>\n    </BrandCard>\n  }\n}\n\nexport default withCopyButton(CounterPartyLinkCard)\n","import React, { Component } from 'react'\nimport BrandCard from '../BrandCard/BrandCard'\nimport Button from '../Button/Button'\nimport withCopyButton from '../withCopyButton'\nimport CompletedIcon from '../../icons/completed.svg'\nimport CopyIcon from '../../icons/copy.svg'\nimport './BackupLinkCard.css'\n\nclass BackupLinkCard extends Component {\n  render () {\n    return <BrandCard className='BackupLinkCard' title='Backup'>\n      <img className='BackupLinkCard_icon' src={CompletedIcon} alt='Completed' />\n      <p className='BackupLinkCard_description'>You need this link to claim your funds if your browser closes.</p>\n      <p>Please copy this link by clicking the button below. Save it in a safe place.</p>\n      <p><Button wide secondary onClick={() => this.props.onCopyClick()} icon={CopyIcon}>Backup Link</Button></p>\n      <p><Button wide primary onClick={this.props.onNextClick}>Next</Button></p>\n    </BrandCard>\n  }\n}\n\nexport default withCopyButton(BackupLinkCard)\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Button from '../../components/Button/Button'\nimport WalletIcon from '../WalletDisplay/wallet-icon.svg'\n\nimport { wallets } from '../../utils/wallets'\nimport cryptoassets from '@liquality/cryptoassets'\n\nimport './WalletChoose.css'\n\nconst WalletChoose = (props) => {\n  const currency = cryptoassets[props.currency]\n  return <div className='WalletChoose'>\n    <img className='WalletDisplay_icon'\n      src={wallets[props.type] ? wallets[props.type].icon : WalletIcon}\n      alt={wallets[props.type] ? wallets[props.type].name : 'Wallet'} />\n    <h1>Select {currency.code} Wallet</h1>\n    <div className='WalletChoose_WalletsContainer'>\n      {props.wallets.map((wallet) => (\n        <div key={wallet} onClick={() => props.chooseWallet(wallet)}>\n          <div className='WalletChoose_wallet'>\n            <img src={wallets[wallet].icon} className='WalletChoose_wallet_image' alt={`${wallets[wallet].name} Icon`} />\n            <h5>{wallets[wallet].name}</h5>\n          </div>\n        </div>\n      ))}\n    </div>\n    <Button wide link onClick={props.onCancel}>Cancel</Button>\n  </div>\n}\n\nWalletChoose.propTypes = {\n  chooseWallet: PropTypes.func,\n  onCancel: PropTypes.func,\n  currency: PropTypes.string,\n  wallets: PropTypes.array\n}\n\nexport default WalletChoose\n","import BitcoinNetworks from '@liquality/bitcoin-networks'\nimport EthereumNetworks from '@liquality/ethereum-networks'\nimport config from '../config'\n\nconst networksMap = {\n  btc: BitcoinNetworks,\n  eth: EthereumNetworks,\n  erc20: EthereumNetworks\n}\n\nfunction getNetworkByCurrency (asset) {\n  const assetConfig = config.assets[asset]\n  const networkId = assetConfig.network\n  const networks = networksMap[asset] || networksMap[assetConfig.type]\n  return networks[networkId]\n}\n\nexport { getNetworkByCurrency }\n","import React from 'react'\nimport PropTypes from 'prop-types'\n\nimport Button from '../../components/Button/Button'\n\nimport { wallets } from '../../utils/wallets'\nimport cryptoassets from '@liquality/cryptoassets'\nimport { getNetworkByCurrency } from '../../utils/networks'\n\nimport './WalletConnect.css'\n\nconst WalletConnect = (props) => {\n  const currency = cryptoassets[props.currency]\n  const network = getNetworkByCurrency(props.currency)\n  return <div className='WalletConnect'>\n    <h1>{props.title}</h1>\n    <p>By connecting you understand that you are on your own trusting a cutting-edge technology without need to trust your trading partner.</p>\n    {props.subTitle && <p>{props.subTitle}</p>}\n    <h2>Pay with {currency.name}</h2>\n    <div className='WalletConnect_wallet'>\n      {network && network.isTestnet && <p>Testnet only</p>}\n      <img src={wallets[props.wallet].icon} className='WalletPanel_walletImg' alt={`${wallets[props.wallet].name} Icon`} />\n      <h5>{wallets[props.wallet].name}</h5>\n      <p><a href={wallets[props.wallet].troubleshootConnectionLink} target='blank'>Trouble connecting?</a></p>\n    </div>\n    <Button wide primary onClick={() => props.connectWallet(props.wallet)}>Connect</Button>\n    <Button wide link onClick={props.onCancel}>Cancel</Button>\n  </div>\n}\n\nWalletConnect.propTypes = {\n  connectWallet: PropTypes.func,\n  onCancel: PropTypes.func,\n  currency: PropTypes.string,\n  title: PropTypes.string,\n  subTitle: PropTypes.string,\n  wallet: PropTypes.string\n}\n\nexport default WalletConnect\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Button from '../../components/Button/Button'\n\nimport { wallets } from '../../utils/wallets'\n\nimport './WalletConnecting.css'\n\nconst WalletConnecting = (props) => {\n  const wallet = wallets[props.wallet]\n  return <div className='WalletConnecting'>\n    <h2>{wallet.connection.title}</h2>\n    {wallet.connection.description && <p>{wallet.connection.description}</p>}\n    <div className='WalletConnecting_wallet'>\n      <img src={wallet.icon} className='WalletPanel_walletImg' alt={`${wallet.name} Icon`} />\n      <h5>{wallet.name}</h5>\n    </div>\n    <Button wide primary onClick={props.cancelWallet}>{props.cancelText}</Button>\n  </div>\n}\n\nWalletConnecting.propTypes = {\n  cancelText: PropTypes.string,\n  cancelWallet: PropTypes.func,\n  currency: PropTypes.string,\n  wallet: PropTypes.string\n}\n\nexport default WalletConnecting\n","export function shortenAddress (address) {\n  return `${address.substring(0, 6)}...${address.substring(address.length - 6)}`\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Button from '../../components/Button/Button'\nimport { shortenAddress } from '../../utils/address'\nimport { wallets } from '../../utils/wallets'\n\nimport './WalletConnected.css'\n\nconst WalletConnected = (props) => (\n  <div className='WalletConnected'>\n    <h2>{wallets[props.wallet].name} Connected</h2>\n    <div className='WalletConnected_wallet'>\n      <img src={wallets[props.wallet].icon} className='WalletPanel_walletImg' alt={`${wallets[props.wallet].name} Icon`} />\n      <h5>{wallets[props.wallet].name}</h5>\n      <p>{shortenAddress(props.addresses[0])}</p>\n    </div>\n    <Button wide primary onClick={props.onOk}>OK</Button>\n    <Button wide link onClick={props.disconnectWallet}>{props.disconnectText}</Button>\n  </div>\n)\n\nWalletConnected.propTypes = {\n  addresses: PropTypes.array,\n  currency: PropTypes.string,\n  disconnectText: PropTypes.string,\n  disconnectWallet: PropTypes.func,\n  onOk: PropTypes.func,\n  wallet: PropTypes.string\n}\n\nexport default WalletConnected\n","import React, {Component} from 'react'\nimport PropTypes from 'prop-types'\nimport Modal from '@material-ui/core/Modal'\nimport WalletChoose from '../WalletChoose/WalletChoose'\nimport WalletConnect from '../WalletConnect/WalletConnect'\nimport WalletConnecting from '../WalletConnecting/WalletConnecting'\nimport WalletConnected from '../WalletConnected/WalletConnected'\nimport { getAssetWallets } from '../../utils/wallets'\n\nimport './WalletConnectPopup.css'\n\nclass WalletConnectPopup extends Component {\n  constructor (props) {\n    super(props)\n\n    this.chooseWallet = this.chooseWallet.bind(this)\n    this.connectWallet = this.connectWallet.bind(this)\n    this.disconnectWallet = this.disconnectWallet.bind(this)\n  }\n\n  chooseWallet (wallet) {\n    const { id, currency } = this.props\n    this.props.chooseWallet(id, currency, wallet)\n  }\n\n  connectWallet (wallet) {\n    const { id, currency } = this.props\n    this.props.connectWallet(id, currency, wallet)\n  }\n\n  disconnectWallet () {\n    const { id } = this.props\n    this.props.disconnectWallet(id)\n  }\n\n  render () {\n    const props = this.props\n    let walletConnectBody\n\n    if (props.walletConnected) {\n      walletConnectBody = (\n        <WalletConnected\n          addresses={props.addresses}\n          currency={props.currency}\n          disconnectText='Disconnect'\n          disconnectWallet={this.disconnectWallet}\n          onOk={this.props.handleClose}\n          wallet={props.wallet}\n        />\n\n      )\n    } else if (props.walletConnecting) {\n      walletConnectBody = (\n        <WalletConnecting\n          cancelText='Cancel'\n          cancelWallet={this.disconnectWallet}\n          currency={props.currency}\n          wallet={props.wallet} />\n      )\n    } else if (props.walletChosen) {\n      walletConnectBody = (\n        <WalletConnect\n          cancelText='Cancel'\n          title='Liquality'\n          onCancel={this.disconnectWallet}\n          currency={props.currency}\n          connectWallet={this.connectWallet}\n          wallet={props.wallet} />\n      )\n    } else {\n      walletConnectBody = (\n        <WalletChoose\n          title='Liquality'\n          subTitle=''\n          wallets={getAssetWallets(this.props.currency)}\n          chooseWallet={this.chooseWallet}\n          onCancel={this.props.handleClose}\n          currency={props.currency} />\n      )\n    }\n\n    return (\n      <div>\n        <Modal id={props.id} open={props.open} onClose={props.handleClose}>\n          <div className='WalletConnectModal'>\n            <div className='WalletConnectModal_body'>\n              { walletConnectBody }\n            </div>\n          </div>\n        </Modal>\n      </div>\n    )\n  }\n}\n\nWalletConnectPopup.propTypes = {\n  open: PropTypes.bool\n}\n\nWalletConnectPopup.defaultProps = {\n  open: false\n}\n\nexport default WalletConnectPopup\n","import React, {Component} from 'react'\nimport './ErrorModal.css'\nimport CloseIcon from '../../icons/close.svg'\n\nclass ErrorModal extends Component {\n  render () {\n    return (\n      <div>\n        { this.props.open && <div className='ErrorModal'>\n          <img className='ErrorModal_close' src={CloseIcon} onClick={this.props.onClose} alt='Close' />\n          {this.props.error && this.props.error.toString()}\n        </div> }\n      </div>\n    )\n  }\n}\n\nexport default ErrorModal\n","import React, { Component } from 'react'\nimport BrandCard from '../../components/BrandCard/BrandCard'\nimport ExpirationDetails from '../../components/ExpirationDetails'\nimport LiqualityLogo from '../../logo.png'\nimport { steps } from '../../components/SwapProgressStepper/steps'\nimport './Waiting.css'\n\nclass Waiting extends Component {\n  getWaitingStatus () {\n    if (this.props.step === steps.AGREEMENT) {\n      if (this.props.isPartyB) {\n        if (!this.props.transactions.b.claim.hash) {\n          return 'Counterparty hasn\\'t claimed.'\n        }\n        if (!this.props.transactions.b.claim.confirmations > 0) {\n          return 'Counterparty has claimed. Awaiting confirmations.'\n        }\n      } else {\n        if (!this.props.transactions.b.fund.hash) {\n          return 'Counterparty will confirm terms before you can claim funds.'\n        }\n        if (!this.props.transactions.b.fund.confirmations > 0) {\n          return 'Counterparty has confirmed terms. Awaiting confirmations.'\n        }\n      }\n    }\n    return ''\n  }\n\n  render () {\n    return <BrandCard className='Waiting' title='Awaiting Counterparty'>\n      <p className='Waiting_status'>{ this.getWaitingStatus() }</p>\n      <p>Thanks to the Atomic Swap you don't need to trust the counterparty and avoid the middlemen.</p>\n      <p><img className='LiqualitySwap_logo' src={LiqualityLogo} alt='Liquality Logo' /></p>\n      <ExpirationDetails isClaim />\n    </BrandCard>\n  }\n}\n\nexport default Waiting\n","import { connect } from 'react-redux'\nimport Waiting from './Waiting'\n\nconst mapStateToProps = state => {\n  return {\n    step: state.swap.step,\n    assets: state.swap.assets,\n    transactions: state.swap.transactions,\n    expiration: state.swap.expiration,\n    isPartyB: state.swap.isPartyB\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(Waiting)\n","import React, { Component } from 'react'\nimport WalletConnectPopup from '../../components/WalletConnectPopup/WalletConnectPopup'\n\nclass WalletPanel extends Component {\n  render () {\n    const { a: assetA, b: assetB } = this.props.assets\n    const { a: walletA, b: walletB } = this.props.wallets\n\n    return <div>\n      <WalletConnectPopup\n        open={walletA.connectOpen}\n        currency={assetA.currency}\n        id='a'\n        walletChosen={walletA.chosen}\n        wallet={walletA.type}\n        chooseWallet={this.props.waitForWallet}\n        connectWallet={this.props.waitForWalletInitialization}\n        disconnectWallet={this.props.onWalletDisconnected}\n        addresses={walletA.addresses}\n        walletConnected={walletA.connected}\n        walletConnecting={walletA.connecting}\n        handleClose={() => this.props.onToggleWalletConnect('a')}\n      />\n\n      <WalletConnectPopup\n        open={walletB.connectOpen}\n        currency={assetB.currency}\n        id='b'\n        walletChosen={walletB.chosen}\n        wallet={walletB.type}\n        chooseWallet={this.props.waitForWallet}\n        connectWallet={this.props.waitForWalletInitialization}\n        disconnectWallet={this.props.onWalletDisconnected}\n        addresses={walletB.addresses}\n        walletConnected={walletB.connected}\n        walletConnecting={walletB.connecting}\n        handleClose={() => this.props.onToggleWalletConnect('b')}\n      />\n    </div>\n  }\n}\n\nexport default WalletPanel\n","import { connect } from 'react-redux'\nimport { actions } from '../../actions/wallets'\nimport WalletPopups from './WalletPopups'\n\nconst mapStateToProps = state => {\n  return {\n    assets: state.swap.assets,\n    wallets: state.swap.wallets\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    onToggleWalletConnect: actions.toggleWalletConnect,\n    waitForWallet: actions.waitForWallet,\n    waitForWalletInitialization: actions.waitForWalletInitialization,\n    onWalletConnected: actions.connectWallet,\n    onWalletDisconnected: actions.disconnectWallet\n  }\n)(WalletPopups)\n","import React, { Component } from 'react'\nimport BrandCard from '../../components/BrandCard/BrandCard'\nimport Button from '../../components/Button/Button'\nimport cryptoassets from '@liquality/cryptoassets'\nimport { getClaimErrors } from '../../utils/validation'\nimport ExpirationDetails from '../../components/ExpirationDetails'\n\nimport './SwapRedemption.css'\n\nclass SwapRedemption extends Component {\n  render () {\n    const errors = getClaimErrors(this.props.expiration, this.props.isPartyB)\n\n    return <BrandCard className='SwapRedemption' title='Claim Funds'>\n      <div className='SwapRedemption_confirmation'>\n        <p className='SwapRedemption_terms'>\n          Get <strong>{this.props.assets.b.value} {cryptoassets[this.props.assets.b.currency].code}</strong>\n          &nbsp;for <strong>{this.props.assets.a.value} {cryptoassets[this.props.assets.a.currency].code}</strong>\n        </p>\n        <p>Thanks to the <strong>Atomic Swap</strong> you don't need to trust the counterparty and avoid the middleman.</p>\n      </div>\n      <ExpirationDetails isClaim />\n      <p>\n        {!errors.claim && <Button wide primary loadingMessage={this.props.loadingMessage} onClick={this.props.redeemSwap}>Claim your funds</Button>}\n        {errors.claim && <div className='SwapRedemption_errorMessage'>{errors.claim}</div>}\n      </p>\n    </BrandCard>\n  }\n}\n\nexport default SwapRedemption\n","import { connect } from 'react-redux'\nimport { actions } from '../../actions/swap'\nimport SwapRedemption from './SwapRedemption'\n\nconst mapStateToProps = state => {\n  return {\n    assets: state.swap.assets,\n    wallets: state.swap.wallets,\n    expiration: state.swap.expiration,\n    isPartyB: state.swap.isPartyB,\n    loadingMessage: state.swap.loadingMessage\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    redeemSwap: actions.redeemSwap\n  }\n)(SwapRedemption)\n","import React, { Component } from 'react'\nimport CurrencyInputs from '../CurrencyInputs'\nimport SwapPairPanel from '../../components/SwapPairPanel/SwapPairPanel'\nimport Button from '../../components/Button/Button'\nimport CompletedIcon from '../../icons/completed.svg'\nimport HandshakeIcon from '../../icons/handshake.png'\n\nimport config from '../../config'\nimport { APP_BASE_URL } from '../../utils/app-links'\n\nimport './SwapCompleted.css'\n\nclass SwapCompleted extends Component {\n  render () {\n    return <div className='SwapCompleted'>\n      <SwapPairPanel\n        haveCurrency={this.props.assets.a.currency}\n        wantCurrency={this.props.assets.b.currency}\n        haveLabel='Sent'\n        wantLabel='Received'\n        icon={CompletedIcon}\n        onIconClick={() => this.props.switchSides()} />\n      <div className='SwapCompleted_top'>\n        <CurrencyInputs disabled />\n        <h2 className='SwapCompleted_label'>Swap Completed</h2>\n        <p className='SwapCompleted_subLabel'>\n          Go to {this.props.assets.b.currency === 'btc' ? 'Ledger Live' : 'MetaMask'} to confirm your balance\n        </p>\n        <span className='SwapCompleted_handshake'><img src={HandshakeIcon} alt='' /></span>\n      </div>\n      <div className='SwapCompleted_bottom'>\n        <Button wide primary onClick={() => window.location.replace(APP_BASE_URL)}>Start another Swap</Button>\n        {config.twitterButton && <a className='twitter-share-button' href={'https://twitter.com/intent/tweet' + config.twitterButton} data-size='large'>Tweet</a>}\n      </div>\n    </div>\n  }\n}\n\nexport default SwapCompleted\n","import { connect } from 'react-redux'\nimport SwapCompleted from './SwapCompleted'\n\nconst mapStateToProps = state => {\n  return {\n    assets: state.swap.assets\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(SwapCompleted)\n","import React, { Component } from 'react'\nimport BrandCard from '../../components/BrandCard/BrandCard'\nimport Button from '../../components/Button/Button'\nimport cryptoassets from '@liquality/cryptoassets'\nimport './SwapRefund.css'\n\nclass SwapRedemption extends Component {\n  render () {\n    return <div>\n      <BrandCard className='SwapRefund' title='RECLAIM YOUR ASSETS'>\n        <div className='SwapRefund_confirmation'>\n          Refund amount:\n          <p className='SwapRefund_terms'>\n            {this.props.assets.a.value} {cryptoassets[this.props.assets.a.currency].code}\n          </p>\n          <p>To process this refund, press the reclaim button.</p>\n        </div>\n        <p><Button wide primary loadingMessage={this.props.loadingMessage} onClick={this.props.refundSwap}>Reclaim</Button></p>\n      </BrandCard>\n      <div className='SwapRefund_expiredFrame'>\n        <div className='SwapRefund_expiredFrame_content'>\n\n          <p className='SwapRefund_expiredFrame_content_title'>\n            Expired Swap offer\n          </p>\n          <hr />\n          <p>\n            Receive: <span className='SwapRefund_expiredFrame_content_value'>{this.props.assets.b.value} {cryptoassets[this.props.assets.b.currency].code}</span>\n          </p>\n          <p>\n            For: <span className='SwapRefund_expiredFrame_content_value'>{this.props.assets.a.value} {cryptoassets[this.props.assets.a.currency].code}</span>\n          </p>\n          <p>\n            Expired: <span className='SwapRefund_expiredFrame_content_value'>{this.props.expiration.format('DD/MM/YYYY h:mm a')}</span>\n          </p>\n          <hr />\n        </div>\n      </div>\n    </div>\n  }\n}\n\nexport default SwapRedemption\n","import { connect } from 'react-redux'\nimport { actions } from '../../actions/swap'\nimport SwapRefund from './SwapRefund'\n\nconst mapStateToProps = state => {\n  return {\n    assets: state.swap.assets,\n    wallets: state.swap.wallets,\n    expiration: state.swap.expiration,\n    isPartyB: state.swap.isPartyB,\n    loadingMessage: state.swap.loadingMessage\n  }\n}\n\nexport default connect(\n  mapStateToProps,\n  {\n    refundSwap: actions.refundSwap\n  }\n)(SwapRefund)\n","import React, { Component } from 'react'\nimport { shortenAddress } from '../../utils/address'\n\nimport './HexaDisplay.css'\n\nclass HexaDisplay extends Component {\n  onCopyLink () {\n    const tempInput = document.createElement('input')\n    tempInput.value = this.props.address\n    tempInput.style = 'position: absolute; top: -2000px;'\n    document.body.appendChild(tempInput)\n    tempInput.select()\n    document.execCommand('copy')\n    document.body.removeChild(tempInput)\n  }\n\n  render () {\n    return <span onClick={() => this.onCopyLink.bind(this)()} className='HexaDisplay'>\n      {shortenAddress(this.props.address)}\n    </span>\n  }\n}\n\nexport default HexaDisplay\n","import React, { Component } from 'react'\nimport BrandCard from '../../components/BrandCard/BrandCard'\nimport HexaDisplay from '../../components/HexaDisplay/HexaDisplay'\nimport Button from '../../components/Button/Button'\nimport cryptoassets from '@liquality/cryptoassets'\nimport { APP_BASE_URL } from '../../utils/app-links'\n\nimport './SwapRefunded.css'\n\nclass SwapRefunded extends Component {\n  render () {\n    const title = cryptoassets[this.props.assets.a.currency].code + ' SUCCESFULLY RECLAIMED'\n    return <div>\n      <BrandCard className='SwapRefunded' title={title}>\n        <div className='SwapRefunded_expiredFrame'>\n          <div className='SwapRefunded_expiredFrame_content'>\n\n            <p className='SwapRefunded_expiredFrame_content_title'>\n              Expired Swap offer\n            </p>\n            <hr />\n            <p>\n              Receive: <span className='SwapRefunded_expiredFrame_content_value'>{this.props.assets.b.value} {cryptoassets[this.props.assets.b.currency].code}</span>\n            </p>\n            <p>\n              For: <span className='SwapRefunded_expiredFrame_content_value'>{this.props.assets.a.value} {cryptoassets[this.props.assets.a.currency].code}</span>\n            </p>\n            <p>\n              Expired: <span className='SwapRefunded_expiredFrame_content_value'>{this.props.expiration.format('DD/MM/YYYY h:mm a')}</span>\n            </p>\n            <hr />\n          </div>\n        </div>\n        <div className='SwapRefunded_confirmation'>\n          <p className='SwapRefunded_terms'>\n            {this.props.assets.a.value} {cryptoassets[this.props.assets.a.currency].code} Returned\n          </p>\n          <p>Address: <HexaDisplay address={this.props.wallets.a.addresses[0]} /></p>\n          <p>Transaction: <HexaDisplay address={this.props.refundTransaction.hash} /></p>\n        </div>\n        <Button className='SwapRefunded_button' wide primary onClick={() => window.location.replace(APP_BASE_URL)}>Start another Swap</Button>\n      </BrandCard>\n    </div>\n  }\n}\n\nexport default SwapRefunded\n","import { connect } from 'react-redux'\nimport SwapRefunded from './SwapRefunded'\n\nconst mapStateToProps = state => {\n  return {\n    assets: state.swap.assets,\n    wallets: state.swap.wallets,\n    expiration: state.swap.expiration,\n    isPartyB: state.swap.isPartyB,\n    refundTransaction: state.swap.transactions.a.refund\n  }\n}\n\nexport default connect(\n  mapStateToProps\n)(SwapRefunded)\n","import React, { Component } from 'react'\nimport PropTypes from 'prop-types'\nimport { Stepper, Step, StepLabel, StepConnector } from '@material-ui/core'\nimport { steps, stepData } from './steps'\n\nimport CompletedIcon from '../../icons/completed.svg'\nimport './SwapProgressStepper.css'\n\nclass SwapProgressStepper extends Component {\n  render () {\n    const activeStep = stepData.findIndex(step => step.id === this.props.state)\n    const connector = (\n      <StepConnector\n        classes={{\n          active: 'SwapProgressStepper_connector_active',\n          completed: 'SwapProgressStepper_connector_completed',\n          line: 'SwapProgressStepper_connector_line',\n          root: 'SwapProgressStepper_connector'\n        }}\n      />)\n    return <Stepper connector={connector} activeStep={activeStep} alternativeLabel className='SwapProgressStepper'>\n      {stepData.map((step, index) => {\n        const stepIconProps = {\n          classes: {\n            root: 'SwapProgressStepper_icon',\n            text: 'SwapProgressStepper_icon_text',\n            active: 'SwapProgressStepper_icon_active',\n            completed: 'SwapProgressStepper_icon_completed'\n          }\n        }\n        if (index < activeStep) {\n          stepIconProps.icon = <img src={CompletedIcon} alt='Completed' />\n        }\n        return <Step key={step.id}>\n          <StepLabel classes={{\n            label: 'SwapProgressStepper_label',\n            alternativeLabel: 'SwapProgressStepper_alternativeLabel',\n            active: 'SwapProgressStepper_label_active',\n            completed: 'SwapProgressStepper_label_completed'\n          }} StepIconProps={stepIconProps}>{step.label}</StepLabel>\n        </Step>\n      })}\n    </Stepper>\n  }\n}\n\nSwapProgressStepper.propTypes = {\n  state: PropTypes.oneOf(Object.values(steps))\n}\n\nexport default SwapProgressStepper\n","import React, { Component } from 'react'\nimport { Route } from 'react-router-dom'\n\nimport AssetSelection from '../AssetSelection'\nimport SwapInitiation from '../SwapInitiation'\nimport CounterPartyLinkCard from '../../components/CounterPartyLinkCard/CounterPartyLinkCard'\nimport BackupLinkCard from '../../components/BackupLinkCard/BackupLinkCard'\nimport WalletConnectPopup from '../../components/WalletConnectPopup/WalletConnectPopup'\nimport ErrorModal from '../../components/ErrorModal/ErrorModal'\nimport Waiting from '../Waiting'\nimport WalletPopups from '../WalletPopups'\nimport SwapRedemption from '../SwapRedemption'\nimport SwapCompleted from '../SwapCompleted'\nimport SwapRefund from '../SwapRefund'\nimport SwapRefunded from '../SwapRefunded'\nimport SwapProgressStepper from '../../components/SwapProgressStepper/SwapProgressStepper'\nimport { generateLink } from '../../utils/app-links'\nimport config from '../../config'\n\nimport LiqualityLogo from '../../logo-text.png'\nimport './LiqualitySwap.css'\n\nclass LiqualitySwap extends Component {\n  constructor (props) {\n    super(props)\n\n    this.getCounterPartyLinkCard = this.getCounterPartyLinkCard.bind(this)\n    this.getBackupLinkCard = this.getBackupLinkCard.bind(this)\n    this.getConnectWallet = this.getConnectWallet.bind(this)\n  }\n\n  getBackupLinkCard () {\n    const link = this.props.swap.link\n    return <BackupLinkCard link={link} onNextClick={() => this.props.history.replace(this.props.swap.isPartyB ? '/waiting' : '/counterPartyLink')} />\n  }\n\n  getCounterPartyLinkCard () {\n    const link = generateLink(this.props.swap, true)\n    return <CounterPartyLinkCard link={link} onNextClick={() => { this.props.waitForSwapConfirmation() }} />\n  }\n\n  getConnectWallet (currentWallet) {\n    const walletA = this.props.swap.wallets.a\n    const walletB = this.props.swap.wallets.b\n    let closeAction = () => { this.props.history.replace('/') }\n    if (currentWallet === 'b' && walletB.connected) {\n      closeAction = () => { this.props.history.replace('/walletA') }\n    } else if (currentWallet === 'a' && walletA.connected) {\n      closeAction = () => { this.props.history.replace('/initiation') }\n    } else if (currentWallet === 'a') {\n      closeAction = () => { this.props.history.replace('/walletB') }\n    }\n    return <WalletConnectPopup\n      open\n      id={currentWallet}\n      currency={this.props.swap.assets[currentWallet].currency}\n      walletChosen={this.props.swap.wallets[currentWallet].chosen}\n      walletConnecting={this.props.swap.wallets[currentWallet].connecting}\n      wallet={this.props.swap.wallets[currentWallet].type}\n      chooseWallet={this.props.waitForWallet}\n      connectWallet={this.props.waitForWalletInitialization}\n      disconnectWallet={this.props.onWalletDisconnected}\n      addresses={this.props.swap.wallets[currentWallet].addresses}\n      walletConnected={this.props.swap.wallets[currentWallet].connected}\n      handleClose={closeAction}\n    />\n  }\n\n  render () {\n    return <div className='LiqualitySwap'>\n      <div className='LiqualitySwap_bar' />\n      <div className='LiqualitySwap_header'>\n        <img className='LiqualitySwap_logo' src={LiqualityLogo} alt='Liquality Logo' />\n        <SwapProgressStepper state={this.props.swap.step} />\n      </div>\n      <div className='LiqualitySwap_main'>\n        <div className='LiqualitySwap_wave' />\n        <div className='LiqualitySwap_wrapper'>\n          <Route exact path='/' component={this.props.swap.isPartyB ? SwapInitiation : AssetSelection} />\n          <Route path='/walletA' render={() => { return this.getConnectWallet('a') }} />\n          <Route path='/walletB' render={() => { return this.getConnectWallet('b') }} />\n          <Route path='/initiation' component={SwapInitiation} />\n          <Route path='/backupLink' render={this.getBackupLinkCard} />\n          <Route path='/counterPartyLink' render={this.getCounterPartyLinkCard} />\n          <Route path='/waiting' component={Waiting} />\n          <Route path='/redeem' component={SwapRedemption} />\n          <Route path='/completed' component={SwapCompleted} />\n          <Route path='/refund' component={SwapRefund} />\n          <Route path='/refunded' component={SwapRefunded} />\n          <WalletPopups />\n        </div>\n      </div>\n      <footer dangerouslySetInnerHTML={{__html: config.injectFooter}} />\n      <ErrorModal open={this.props.error} error={this.props.error} onClose={this.props.clearError} />\n    </div>\n  }\n}\n\nexport default LiqualitySwap\n","import { connect } from 'react-redux'\nimport { withRouter } from 'react-router-dom'\nimport { actions as swapActions } from '../../actions/swap'\nimport { actions as walletsActions } from '../../actions/wallets'\nimport { actions as errorActions } from '../../actions/errors'\nimport LiqualitySwap from './LiqualitySwap'\n\nconst mapStateToProps = state => ({\n  swap: state.swap,\n  error: state.error\n})\n\nexport default withRouter(connect(\n  mapStateToProps,\n  {\n    waitForSwapConfirmation: swapActions.waitForSwapConfirmation,\n    waitForSwapClaim: swapActions.waitForSwapClaim,\n    waitForSwapRefund: swapActions.waitForSwapRefund,\n    clearError: errorActions.clearError,\n    waitForWallet: walletsActions.waitForWallet,\n    waitForWalletInitialization: walletsActions.waitForWalletInitialization,\n    onWalletDisconnected: walletsActions.disconnectWallet,\n    onToggleWalletConnect: walletsActions.toggleWalletConnect\n  }\n)(LiqualitySwap))\n","import React, { Component } from 'react'\n\nimport { Provider } from 'react-redux'\nimport { ConnectedRouter } from 'connected-react-router'\n\nimport { store, initialAppState } from './store'\nimport history from './history'\nimport errorHandler from './errorHandler'\n\nimport { actions as swapActions } from './actions/swap'\nimport { actions as transactionActions } from './actions/transactions'\nimport { actions as assetActions } from './actions/assets'\n\nimport LiqualitySwap from './containers/LiqualitySwap'\nimport './App.css'\n\nwindow.onbeforeunload = () => { // Prompt on trying to leave app\n  return true\n}\n\nwindow.addEventListener('error', errorHandler)\nwindow.addEventListener('unhandledrejection', e => errorHandler(e.reason))\n\nif (initialAppState.swap) {\n  store.dispatch(transactionActions.loadTransactions())\n  if (initialAppState.swap.isPartyB) {\n    // Need to use action to kick off tx monitoring\n    store.dispatch(transactionActions.setTransaction(\n      'b', 'fund', initialAppState.swap.transactions.b.fund\n    ))\n    store.dispatch(swapActions.verifyInitiateSwapTransaction)\n    store.dispatch(assetActions.changeAmount('b', initialAppState.swap.assets.b.value)) // Trigger rate calc\n  }\n}\n\nclass App extends Component {\n  render () {\n    return (\n      <Provider store={store}>\n        <ConnectedRouter history={history}>\n          <LiqualitySwap />\n        </ConnectedRouter>\n      </Provider>\n    )\n  }\n}\n\nexport default App\n","/* global fetch */\n// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport default function register () {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          )\n        })\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.')\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport { unregister as unregisterServiceWorker } from './registerServiceWorker'\nimport config from './config'\n\nfunction addScript (code) {\n  const script = document.createElement('script')\n  script.type = 'text/javascript'\n  script.innerHTML = code\n  document.getElementsByTagName('head')[0].appendChild(script)\n}\n\nfunction isMobileOrTablet () {\n  var check = false;\n  (function(a){if(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a)||/1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0,4))) check = true;})(navigator.userAgent||navigator.vendor||window.opera) // eslint-disable-line\n  return check\n}\n\nconst MobileView = () => <h2 style={{margin: '20px', textAlign: 'center'}}>\n  Mobile and tablet devices are currently not supported. Please use a desktop browser.\n</h2>\n\naddScript(config.injectScript)\n\nReactDOM.render(isMobileOrTablet() ? <MobileView /> : <App />, document.getElementById('root'))\n\nunregisterServiceWorker() // Incase anyone has it\n","module.exports = __webpack_public_path__ + \"static/media/copy.26f38b83.svg\";","module.exports = __webpack_public_path__ + \"static/media/close.4ceeeab0.svg\";","module.exports = __webpack_public_path__ + \"static/media/switch.31f6da16.svg\";","module.exports = __webpack_public_path__ + \"static/media/clock.baea04ec.svg\";","module.exports = __webpack_public_path__ + \"static/media/handshake.35e4ba88.png\";","module.exports = __webpack_public_path__ + \"static/media/wallet-icon.1755dc6e.svg\";","module.exports = __webpack_public_path__ + \"static/media/ledger.4cfa0cb4.svg\";","module.exports = __webpack_public_path__ + \"static/media/node.b71a2a38.svg\";","module.exports = __webpack_public_path__ + \"static/media/metamask.dcf1fb0e.svg\";","module.exports = __webpack_public_path__ + \"static/media/assets-bg.df3317e4.svg\";","module.exports = __webpack_public_path__ + \"static/media/spinner.a596700e.svg\";","module.exports = __webpack_public_path__ + \"static/media/tick.91b58e9e.svg\";","module.exports = __webpack_public_path__ + \"static/media/error.9c76fef5.svg\";","module.exports = __webpack_public_path__ + \"static/media/lock.6b34fdcb.svg\";","module.exports = __webpack_public_path__ + \"static/media/logo.f8b51b82.png\";","module.exports = __webpack_public_path__ + \"static/media/logo-text.3c2c3338.png\";","var map = {\n\t\"./$pac.svg\": 684,\n\t\"./2give.svg\": 685,\n\t\"./abt.svg\": 686,\n\t\"./act.svg\": 687,\n\t\"./actn.svg\": 688,\n\t\"./ada.svg\": 689,\n\t\"./add.svg\": 690,\n\t\"./adx.svg\": 691,\n\t\"./ae.svg\": 692,\n\t\"./aeon.svg\": 693,\n\t\"./aeur.svg\": 694,\n\t\"./agi.svg\": 695,\n\t\"./agrs.svg\": 696,\n\t\"./aion.svg\": 697,\n\t\"./amb.svg\": 698,\n\t\"./amp.svg\": 699,\n\t\"./ant.svg\": 700,\n\t\"./apex.svg\": 701,\n\t\"./appc.svg\": 702,\n\t\"./ardr.svg\": 703,\n\t\"./arg.svg\": 704,\n\t\"./ark.svg\": 705,\n\t\"./arn.svg\": 706,\n\t\"./ary.svg\": 707,\n\t\"./ast.svg\": 708,\n\t\"./atm.svg\": 709,\n\t\"./audr.svg\": 710,\n\t\"./auto.svg\": 711,\n\t\"./aywa.svg\": 712,\n\t\"./bab.svg\": 713,\n\t\"./bat.svg\": 714,\n\t\"./bay.svg\": 715,\n\t\"./bcbc.svg\": 716,\n\t\"./bcc.svg\": 717,\n\t\"./bcd.svg\": 718,\n\t\"./bch.svg\": 719,\n\t\"./bcio.svg\": 720,\n\t\"./bcn.svg\": 721,\n\t\"./bco.svg\": 722,\n\t\"./bcpt.svg\": 723,\n\t\"./bdl.svg\": 724,\n\t\"./beam.svg\": 725,\n\t\"./bela.svg\": 726,\n\t\"./bix.svg\": 727,\n\t\"./blcn.svg\": 728,\n\t\"./blk.svg\": 729,\n\t\"./block.svg\": 730,\n\t\"./blz.svg\": 731,\n\t\"./bnb.svg\": 732,\n\t\"./bnt.svg\": 733,\n\t\"./bnty.svg\": 734,\n\t\"./booty.svg\": 735,\n\t\"./bos.svg\": 736,\n\t\"./bpt.svg\": 737,\n\t\"./bq.svg\": 738,\n\t\"./brd.svg\": 739,\n\t\"./bsd.svg\": 740,\n\t\"./bsv.svg\": 741,\n\t\"./btc.svg\": 742,\n\t\"./btcd.svg\": 743,\n\t\"./btch.svg\": 744,\n\t\"./btcp.svg\": 745,\n\t\"./btcz.svg\": 746,\n\t\"./btdx.svg\": 747,\n\t\"./btg.svg\": 748,\n\t\"./btm.svg\": 749,\n\t\"./bts.svg\": 750,\n\t\"./btt.svg\": 751,\n\t\"./btx.svg\": 752,\n\t\"./burst.svg\": 753,\n\t\"./call.svg\": 754,\n\t\"./cc.svg\": 755,\n\t\"./cdn.svg\": 756,\n\t\"./cdt.svg\": 757,\n\t\"./cenz.svg\": 758,\n\t\"./chain.svg\": 759,\n\t\"./chat.svg\": 760,\n\t\"./chips.svg\": 761,\n\t\"./cix.svg\": 762,\n\t\"./clam.svg\": 763,\n\t\"./cloak.svg\": 764,\n\t\"./cmm.svg\": 765,\n\t\"./cmt.svg\": 766,\n\t\"./cnd.svg\": 767,\n\t\"./cnx.svg\": 768,\n\t\"./cny.svg\": 769,\n\t\"./cob.svg\": 770,\n\t\"./colx.svg\": 771,\n\t\"./coqui.svg\": 772,\n\t\"./cred.svg\": 773,\n\t\"./crpt.svg\": 774,\n\t\"./crw.svg\": 775,\n\t\"./cs.svg\": 776,\n\t\"./ctr.svg\": 777,\n\t\"./ctxc.svg\": 778,\n\t\"./cvc.svg\": 779,\n\t\"./dai.svg\": 780,\n\t\"./dash.svg\": 781,\n\t\"./dat.svg\": 782,\n\t\"./data.svg\": 783,\n\t\"./dbc.svg\": 784,\n\t\"./dcn.svg\": 785,\n\t\"./dcr.svg\": 786,\n\t\"./deez.svg\": 787,\n\t\"./dent.svg\": 788,\n\t\"./dew.svg\": 789,\n\t\"./dgb.svg\": 790,\n\t\"./dgd.svg\": 791,\n\t\"./dlt.svg\": 792,\n\t\"./dnr.svg\": 793,\n\t\"./dnt.svg\": 794,\n\t\"./dock.svg\": 795,\n\t\"./doge.svg\": 796,\n\t\"./drgn.svg\": 797,\n\t\"./drop.svg\": 798,\n\t\"./dta.svg\": 799,\n\t\"./dth.svg\": 800,\n\t\"./dtr.svg\": 801,\n\t\"./ebst.svg\": 802,\n\t\"./eca.svg\": 803,\n\t\"./edg.svg\": 804,\n\t\"./edo.svg\": 805,\n\t\"./edoge.svg\": 806,\n\t\"./ela.svg\": 807,\n\t\"./elf.svg\": 808,\n\t\"./elix.svg\": 809,\n\t\"./ella.svg\": 810,\n\t\"./emc.svg\": 811,\n\t\"./emc2.svg\": 812,\n\t\"./eng.svg\": 813,\n\t\"./enj.svg\": 814,\n\t\"./entrp.svg\": 815,\n\t\"./eon.svg\": 816,\n\t\"./eop.svg\": 817,\n\t\"./eos.svg\": 818,\n\t\"./eqli.svg\": 819,\n\t\"./equa.svg\": 820,\n\t\"./etc.svg\": 821,\n\t\"./eth.svg\": 822,\n\t\"./ethos.svg\": 823,\n\t\"./etn.svg\": 824,\n\t\"./etp.svg\": 825,\n\t\"./eur.svg\": 826,\n\t\"./evx.svg\": 827,\n\t\"./exmo.svg\": 828,\n\t\"./exp.svg\": 829,\n\t\"./fair.svg\": 830,\n\t\"./fct.svg\": 831,\n\t\"./fil.svg\": 832,\n\t\"./fjc.svg\": 833,\n\t\"./fldc.svg\": 834,\n\t\"./flo.svg\": 835,\n\t\"./fsn.svg\": 836,\n\t\"./ftc.svg\": 837,\n\t\"./fuel.svg\": 838,\n\t\"./fun.svg\": 839,\n\t\"./game.svg\": 840,\n\t\"./gas.svg\": 841,\n\t\"./gbp.svg\": 842,\n\t\"./gbx.svg\": 843,\n\t\"./gbyte.svg\": 844,\n\t\"./generic.svg\": 845,\n\t\"./gin.svg\": 846,\n\t\"./glxt.svg\": 847,\n\t\"./gmr.svg\": 848,\n\t\"./gno.svg\": 849,\n\t\"./gnt.svg\": 850,\n\t\"./gold.svg\": 851,\n\t\"./grc.svg\": 852,\n\t\"./grin.svg\": 853,\n\t\"./grs.svg\": 854,\n\t\"./gsc.svg\": 855,\n\t\"./gto.svg\": 856,\n\t\"./gup.svg\": 857,\n\t\"./gusd.svg\": 858,\n\t\"./gvt.svg\": 859,\n\t\"./gxs.svg\": 860,\n\t\"./gzr.svg\": 861,\n\t\"./hight.svg\": 862,\n\t\"./hodl.svg\": 863,\n\t\"./hot.svg\": 864,\n\t\"./hpb.svg\": 865,\n\t\"./hsr.svg\": 866,\n\t\"./ht.svg\": 867,\n\t\"./html.svg\": 868,\n\t\"./huc.svg\": 869,\n\t\"./hush.svg\": 870,\n\t\"./icn.svg\": 871,\n\t\"./icx.svg\": 872,\n\t\"./ignis.svg\": 873,\n\t\"./ilk.svg\": 874,\n\t\"./ink.svg\": 875,\n\t\"./ins.svg\": 876,\n\t\"./ion.svg\": 877,\n\t\"./iop.svg\": 878,\n\t\"./iost.svg\": 879,\n\t\"./iotx.svg\": 880,\n\t\"./iq.svg\": 881,\n\t\"./itc.svg\": 882,\n\t\"./jnt.svg\": 883,\n\t\"./jpy.svg\": 884,\n\t\"./kcs.svg\": 885,\n\t\"./kin.svg\": 886,\n\t\"./kmd.svg\": 887,\n\t\"./knc.svg\": 888,\n\t\"./krb.svg\": 889,\n\t\"./lbc.svg\": 890,\n\t\"./lend.svg\": 891,\n\t\"./link.svg\": 892,\n\t\"./lkk.svg\": 893,\n\t\"./loom.svg\": 894,\n\t\"./lpt.svg\": 895,\n\t\"./lrc.svg\": 896,\n\t\"./lsk.svg\": 897,\n\t\"./ltc.svg\": 898,\n\t\"./lun.svg\": 899,\n\t\"./maid.svg\": 900,\n\t\"./mana.svg\": 901,\n\t\"./mcap.svg\": 902,\n\t\"./mco.svg\": 903,\n\t\"./mda.svg\": 904,\n\t\"./mds.svg\": 905,\n\t\"./med.svg\": 906,\n\t\"./meetone.svg\": 907,\n\t\"./miota.svg\": 908,\n\t\"./mith.svg\": 909,\n\t\"./mkr.svg\": 910,\n\t\"./mln.svg\": 911,\n\t\"./mnx.svg\": 912,\n\t\"./mnz.svg\": 913,\n\t\"./moac.svg\": 914,\n\t\"./mod.svg\": 915,\n\t\"./mona.svg\": 916,\n\t\"./msr.svg\": 917,\n\t\"./mth.svg\": 918,\n\t\"./mtl.svg\": 919,\n\t\"./music.svg\": 920,\n\t\"./mzc.svg\": 921,\n\t\"./nano.svg\": 922,\n\t\"./nas.svg\": 923,\n\t\"./nav.svg\": 924,\n\t\"./ncash.svg\": 925,\n\t\"./ndz.svg\": 926,\n\t\"./nebl.svg\": 927,\n\t\"./neo.svg\": 928,\n\t\"./neos.svg\": 929,\n\t\"./neu.svg\": 930,\n\t\"./nexo.svg\": 931,\n\t\"./ngc.svg\": 932,\n\t\"./nio.svg\": 933,\n\t\"./nlc2.svg\": 934,\n\t\"./nlg.svg\": 935,\n\t\"./nmc.svg\": 936,\n\t\"./npxs.svg\": 937,\n\t\"./nuls.svg\": 938,\n\t\"./nxs.svg\": 939,\n\t\"./nxt.svg\": 940,\n\t\"./oax.svg\": 941,\n\t\"./ok.svg\": 942,\n\t\"./omg.svg\": 943,\n\t\"./omni.svg\": 944,\n\t\"./ong.svg\": 945,\n\t\"./ont.svg\": 946,\n\t\"./oot.svg\": 947,\n\t\"./ost.svg\": 948,\n\t\"./ox.svg\": 949,\n\t\"./part.svg\": 950,\n\t\"./pasc.svg\": 951,\n\t\"./pasl.svg\": 952,\n\t\"./pax.svg\": 953,\n\t\"./pay.svg\": 954,\n\t\"./payx.svg\": 955,\n\t\"./pink.svg\": 956,\n\t\"./pirl.svg\": 957,\n\t\"./pivx.svg\": 958,\n\t\"./plr.svg\": 959,\n\t\"./poa.svg\": 960,\n\t\"./poe.svg\": 961,\n\t\"./polis.svg\": 962,\n\t\"./poly.svg\": 963,\n\t\"./pot.svg\": 964,\n\t\"./powr.svg\": 965,\n\t\"./ppc.svg\": 966,\n\t\"./ppp.svg\": 967,\n\t\"./ppt.svg\": 968,\n\t\"./pre.svg\": 969,\n\t\"./prl.svg\": 970,\n\t\"./pungo.svg\": 971,\n\t\"./pura.svg\": 972,\n\t\"./qash.svg\": 973,\n\t\"./qiwi.svg\": 974,\n\t\"./qlc.svg\": 975,\n\t\"./qrl.svg\": 976,\n\t\"./qsp.svg\": 977,\n\t\"./qtum.svg\": 978,\n\t\"./r.svg\": 979,\n\t\"./rads.svg\": 980,\n\t\"./rap.svg\": 981,\n\t\"./rcn.svg\": 982,\n\t\"./rdd.svg\": 983,\n\t\"./rdn.svg\": 984,\n\t\"./rep.svg\": 985,\n\t\"./req.svg\": 986,\n\t\"./rhoc.svg\": 987,\n\t\"./ric.svg\": 988,\n\t\"./rise.svg\": 989,\n\t\"./rlc.svg\": 990,\n\t\"./rpx.svg\": 991,\n\t\"./rub.svg\": 992,\n\t\"./rvn.svg\": 993,\n\t\"./ryo.svg\": 994,\n\t\"./safe.svg\": 995,\n\t\"./salt.svg\": 996,\n\t\"./san.svg\": 997,\n\t\"./sbd.svg\": 998,\n\t\"./sberbank.svg\": 999,\n\t\"./sc.svg\": 1000,\n\t\"./shift.svg\": 1001,\n\t\"./sib.svg\": 1002,\n\t\"./sky.svg\": 1003,\n\t\"./slr.svg\": 1004,\n\t\"./sls.svg\": 1005,\n\t\"./smart.svg\": 1006,\n\t\"./sngls.svg\": 1007,\n\t\"./snm.svg\": 1008,\n\t\"./snt.svg\": 1009,\n\t\"./soc.svg\": 1010,\n\t\"./spank.svg\": 1011,\n\t\"./sphtx.svg\": 1012,\n\t\"./srn.svg\": 1013,\n\t\"./stak.svg\": 1014,\n\t\"./start.svg\": 1015,\n\t\"./steem.svg\": 1016,\n\t\"./storj.svg\": 1017,\n\t\"./storm.svg\": 1018,\n\t\"./stq.svg\": 1019,\n\t\"./strat.svg\": 1020,\n\t\"./sub.svg\": 1021,\n\t\"./sumo.svg\": 1022,\n\t\"./sys.svg\": 1023,\n\t\"./taas.svg\": 1024,\n\t\"./tau.svg\": 1025,\n\t\"./tbx.svg\": 1026,\n\t\"./tel.svg\": 1027,\n\t\"./ten.svg\": 1028,\n\t\"./tern.svg\": 1029,\n\t\"./tghc.svg\": 1030,\n\t\"./theta.svg\": 1031,\n\t\"./tix.svg\": 1032,\n\t\"./tkn.svg\": 1033,\n\t\"./tks.svg\": 1034,\n\t\"./tnb.svg\": 1035,\n\t\"./tnc.svg\": 1036,\n\t\"./tnt.svg\": 1037,\n\t\"./tomo.svg\": 1038,\n\t\"./tpay.svg\": 1039,\n\t\"./trig.svg\": 1040,\n\t\"./trtl.svg\": 1041,\n\t\"./trx.svg\": 1042,\n\t\"./tusd.svg\": 1043,\n\t\"./tzc.svg\": 1044,\n\t\"./ubq.svg\": 1045,\n\t\"./unity.svg\": 1046,\n\t\"./usd.svg\": 1047,\n\t\"./usdc.svg\": 1048,\n\t\"./usdt.svg\": 1049,\n\t\"./utk.svg\": 1050,\n\t\"./veri.svg\": 1051,\n\t\"./vet.svg\": 1052,\n\t\"./via.svg\": 1053,\n\t\"./vib.svg\": 1054,\n\t\"./vibe.svg\": 1055,\n\t\"./vivo.svg\": 1056,\n\t\"./vrc.svg\": 1057,\n\t\"./vrsc.svg\": 1058,\n\t\"./vtc.svg\": 1059,\n\t\"./vtho.svg\": 1060,\n\t\"./wabi.svg\": 1061,\n\t\"./wan.svg\": 1062,\n\t\"./waves.svg\": 1063,\n\t\"./wax.svg\": 1064,\n\t\"./wgr.svg\": 1065,\n\t\"./wicc.svg\": 1066,\n\t\"./wings.svg\": 1067,\n\t\"./wpr.svg\": 1068,\n\t\"./wtc.svg\": 1069,\n\t\"./x.svg\": 1070,\n\t\"./xas.svg\": 1071,\n\t\"./xbc.svg\": 1072,\n\t\"./xby.svg\": 1073,\n\t\"./xcp.svg\": 1074,\n\t\"./xdn.svg\": 1075,\n\t\"./xem.svg\": 1076,\n\t\"./xin.svg\": 1077,\n\t\"./xlm.svg\": 1078,\n\t\"./xmcc.svg\": 1079,\n\t\"./xmg.svg\": 1080,\n\t\"./xmo.svg\": 1081,\n\t\"./xmr.svg\": 1082,\n\t\"./xmy.svg\": 1083,\n\t\"./xp.svg\": 1084,\n\t\"./xpa.svg\": 1085,\n\t\"./xpm.svg\": 1086,\n\t\"./xrp.svg\": 1087,\n\t\"./xsg.svg\": 1088,\n\t\"./xtz.svg\": 1089,\n\t\"./xuc.svg\": 1090,\n\t\"./xvc.svg\": 1091,\n\t\"./xvg.svg\": 1092,\n\t\"./xzc.svg\": 1093,\n\t\"./yoyow.svg\": 1094,\n\t\"./zcl.svg\": 1095,\n\t\"./zec.svg\": 1096,\n\t\"./zel.svg\": 1097,\n\t\"./zen.svg\": 1098,\n\t\"./zest.svg\": 1099,\n\t\"./zil.svg\": 1100,\n\t\"./zilla.svg\": 1101,\n\t\"./zrx.svg\": 1102\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 683;","module.exports = __webpack_public_path__ + \"static/media/completed.c5ff6920.svg\";"],"sourceRoot":""}